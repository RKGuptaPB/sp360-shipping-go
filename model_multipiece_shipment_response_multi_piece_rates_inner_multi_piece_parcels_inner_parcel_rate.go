/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate{}

// MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate description
type MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate struct {
	// description
	BaseCharge *float32 `json:"baseCharge,omitempty"`
	// description
	Surcharges []MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRateSurchargesInner `json:"surcharges,omitempty"`
}

// NewMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate instantiates a new MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate() *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate {
	this := MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate{}
	return &this
}

// NewMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRateWithDefaults instantiates a new MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRateWithDefaults() *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate {
	this := MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate{}
	return &this
}

// GetBaseCharge returns the BaseCharge field value if set, zero value otherwise.
func (o *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) GetBaseCharge() float32 {
	if o == nil || IsNil(o.BaseCharge) {
		var ret float32
		return ret
	}
	return *o.BaseCharge
}

// GetBaseChargeOk returns a tuple with the BaseCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) GetBaseChargeOk() (*float32, bool) {
	if o == nil || IsNil(o.BaseCharge) {
		return nil, false
	}
	return o.BaseCharge, true
}

// HasBaseCharge returns a boolean if a field has been set.
func (o *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) HasBaseCharge() bool {
	if o != nil && !IsNil(o.BaseCharge) {
		return true
	}

	return false
}

// SetBaseCharge gets a reference to the given float32 and assigns it to the BaseCharge field.
func (o *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) SetBaseCharge(v float32) {
	o.BaseCharge = &v
}

// GetSurcharges returns the Surcharges field value if set, zero value otherwise.
func (o *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) GetSurcharges() []MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRateSurchargesInner {
	if o == nil || IsNil(o.Surcharges) {
		var ret []MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRateSurchargesInner
		return ret
	}
	return o.Surcharges
}

// GetSurchargesOk returns a tuple with the Surcharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) GetSurchargesOk() ([]MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRateSurchargesInner, bool) {
	if o == nil || IsNil(o.Surcharges) {
		return nil, false
	}
	return o.Surcharges, true
}

// HasSurcharges returns a boolean if a field has been set.
func (o *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) HasSurcharges() bool {
	if o != nil && !IsNil(o.Surcharges) {
		return true
	}

	return false
}

// SetSurcharges gets a reference to the given []MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRateSurchargesInner and assigns it to the Surcharges field.
func (o *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) SetSurcharges(v []MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRateSurchargesInner) {
	o.Surcharges = v
}

func (o MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BaseCharge) {
		toSerialize["baseCharge"] = o.BaseCharge
	}
	if !IsNil(o.Surcharges) {
		toSerialize["surcharges"] = o.Surcharges
	}
	return toSerialize, nil
}

type NullableMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate struct {
	value *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate
	isSet bool
}

func (v NullableMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) Get() *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate {
	return v.value
}

func (v *NullableMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) Set(val *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate(val *MultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) *NullableMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate {
	return &NullableMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate{value: val, isSet: true}
}

func (v NullableMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipieceShipmentResponseMultiPieceRatesInnerMultiPieceParcelsInnerParcelRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


