/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the ParcelTypesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParcelTypesInner{}

// ParcelTypesInner struct for ParcelTypesInner
type ParcelTypesInner struct {
	// The branded name of parcel type
	BrandedName *string `json:"brandedName,omitempty"`
	// A unique identifier associated with the specific carrier.
	Carrier *string `json:"carrier,omitempty"`
	// Defines the maximum and minimum dimension supported for given parcel type.
	DimensionRules []ParcelTypesInnerDimensionRulesInner `json:"dimensionRules,omitempty"`
	GroupName *string `json:"groupName,omitempty"`
	BrandedDimensions *ParcelTypesInnerBrandedDimensions `json:"brandedDimensions,omitempty"`
	// A unique identifier associated with the Parcel.
	ParcelId *string `json:"parcelId,omitempty"`
	// If the Parcel is Branded. If yes, it will take `true`, else will take `false`.
	IsBranded *bool `json:"isBranded,omitempty"`
	// Defines the type of Parcel.
	ParcelType *string `json:"parcelType,omitempty"`
	// A unique identifier associated with the carrier-based service.
	ServiceId *string `json:"serviceId,omitempty"`
	// Name of the Carrier Service.
	ServiceName *string `json:"serviceName,omitempty"`
	// Defines the parcel has feature to track special serviceID.
	SuggestedTrackableSpecialserviceId *string `json:"suggestedTrackableSpecialserviceId,omitempty"`
	// Defines the maximum and minimum weight supported for given parcel type.
	WeightRules []ParcelTypesInnerWeightRulesInner `json:"weightRules,omitempty"`
}

// NewParcelTypesInner instantiates a new ParcelTypesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParcelTypesInner() *ParcelTypesInner {
	this := ParcelTypesInner{}
	return &this
}

// NewParcelTypesInnerWithDefaults instantiates a new ParcelTypesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParcelTypesInnerWithDefaults() *ParcelTypesInner {
	this := ParcelTypesInner{}
	return &this
}

// GetBrandedName returns the BrandedName field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetBrandedName() string {
	if o == nil || IsNil(o.BrandedName) {
		var ret string
		return ret
	}
	return *o.BrandedName
}

// GetBrandedNameOk returns a tuple with the BrandedName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetBrandedNameOk() (*string, bool) {
	if o == nil || IsNil(o.BrandedName) {
		return nil, false
	}
	return o.BrandedName, true
}

// HasBrandedName returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasBrandedName() bool {
	if o != nil && !IsNil(o.BrandedName) {
		return true
	}

	return false
}

// SetBrandedName gets a reference to the given string and assigns it to the BrandedName field.
func (o *ParcelTypesInner) SetBrandedName(v string) {
	o.BrandedName = &v
}

// GetCarrier returns the Carrier field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetCarrier() string {
	if o == nil || IsNil(o.Carrier) {
		var ret string
		return ret
	}
	return *o.Carrier
}

// GetCarrierOk returns a tuple with the Carrier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetCarrierOk() (*string, bool) {
	if o == nil || IsNil(o.Carrier) {
		return nil, false
	}
	return o.Carrier, true
}

// HasCarrier returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasCarrier() bool {
	if o != nil && !IsNil(o.Carrier) {
		return true
	}

	return false
}

// SetCarrier gets a reference to the given string and assigns it to the Carrier field.
func (o *ParcelTypesInner) SetCarrier(v string) {
	o.Carrier = &v
}

// GetDimensionRules returns the DimensionRules field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetDimensionRules() []ParcelTypesInnerDimensionRulesInner {
	if o == nil || IsNil(o.DimensionRules) {
		var ret []ParcelTypesInnerDimensionRulesInner
		return ret
	}
	return o.DimensionRules
}

// GetDimensionRulesOk returns a tuple with the DimensionRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetDimensionRulesOk() ([]ParcelTypesInnerDimensionRulesInner, bool) {
	if o == nil || IsNil(o.DimensionRules) {
		return nil, false
	}
	return o.DimensionRules, true
}

// HasDimensionRules returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasDimensionRules() bool {
	if o != nil && !IsNil(o.DimensionRules) {
		return true
	}

	return false
}

// SetDimensionRules gets a reference to the given []ParcelTypesInnerDimensionRulesInner and assigns it to the DimensionRules field.
func (o *ParcelTypesInner) SetDimensionRules(v []ParcelTypesInnerDimensionRulesInner) {
	o.DimensionRules = v
}

// GetGroupName returns the GroupName field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetGroupName() string {
	if o == nil || IsNil(o.GroupName) {
		var ret string
		return ret
	}
	return *o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.GroupName) {
		return nil, false
	}
	return o.GroupName, true
}

// HasGroupName returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasGroupName() bool {
	if o != nil && !IsNil(o.GroupName) {
		return true
	}

	return false
}

// SetGroupName gets a reference to the given string and assigns it to the GroupName field.
func (o *ParcelTypesInner) SetGroupName(v string) {
	o.GroupName = &v
}

// GetBrandedDimensions returns the BrandedDimensions field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetBrandedDimensions() ParcelTypesInnerBrandedDimensions {
	if o == nil || IsNil(o.BrandedDimensions) {
		var ret ParcelTypesInnerBrandedDimensions
		return ret
	}
	return *o.BrandedDimensions
}

// GetBrandedDimensionsOk returns a tuple with the BrandedDimensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetBrandedDimensionsOk() (*ParcelTypesInnerBrandedDimensions, bool) {
	if o == nil || IsNil(o.BrandedDimensions) {
		return nil, false
	}
	return o.BrandedDimensions, true
}

// HasBrandedDimensions returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasBrandedDimensions() bool {
	if o != nil && !IsNil(o.BrandedDimensions) {
		return true
	}

	return false
}

// SetBrandedDimensions gets a reference to the given ParcelTypesInnerBrandedDimensions and assigns it to the BrandedDimensions field.
func (o *ParcelTypesInner) SetBrandedDimensions(v ParcelTypesInnerBrandedDimensions) {
	o.BrandedDimensions = &v
}

// GetParcelId returns the ParcelId field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetParcelId() string {
	if o == nil || IsNil(o.ParcelId) {
		var ret string
		return ret
	}
	return *o.ParcelId
}

// GetParcelIdOk returns a tuple with the ParcelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetParcelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelId) {
		return nil, false
	}
	return o.ParcelId, true
}

// HasParcelId returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasParcelId() bool {
	if o != nil && !IsNil(o.ParcelId) {
		return true
	}

	return false
}

// SetParcelId gets a reference to the given string and assigns it to the ParcelId field.
func (o *ParcelTypesInner) SetParcelId(v string) {
	o.ParcelId = &v
}

// GetIsBranded returns the IsBranded field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetIsBranded() bool {
	if o == nil || IsNil(o.IsBranded) {
		var ret bool
		return ret
	}
	return *o.IsBranded
}

// GetIsBrandedOk returns a tuple with the IsBranded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetIsBrandedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsBranded) {
		return nil, false
	}
	return o.IsBranded, true
}

// HasIsBranded returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasIsBranded() bool {
	if o != nil && !IsNil(o.IsBranded) {
		return true
	}

	return false
}

// SetIsBranded gets a reference to the given bool and assigns it to the IsBranded field.
func (o *ParcelTypesInner) SetIsBranded(v bool) {
	o.IsBranded = &v
}

// GetParcelType returns the ParcelType field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetParcelType() string {
	if o == nil || IsNil(o.ParcelType) {
		var ret string
		return ret
	}
	return *o.ParcelType
}

// GetParcelTypeOk returns a tuple with the ParcelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetParcelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelType) {
		return nil, false
	}
	return o.ParcelType, true
}

// HasParcelType returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasParcelType() bool {
	if o != nil && !IsNil(o.ParcelType) {
		return true
	}

	return false
}

// SetParcelType gets a reference to the given string and assigns it to the ParcelType field.
func (o *ParcelTypesInner) SetParcelType(v string) {
	o.ParcelType = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *ParcelTypesInner) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *ParcelTypesInner) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetSuggestedTrackableSpecialserviceId returns the SuggestedTrackableSpecialserviceId field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetSuggestedTrackableSpecialserviceId() string {
	if o == nil || IsNil(o.SuggestedTrackableSpecialserviceId) {
		var ret string
		return ret
	}
	return *o.SuggestedTrackableSpecialserviceId
}

// GetSuggestedTrackableSpecialserviceIdOk returns a tuple with the SuggestedTrackableSpecialserviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetSuggestedTrackableSpecialserviceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SuggestedTrackableSpecialserviceId) {
		return nil, false
	}
	return o.SuggestedTrackableSpecialserviceId, true
}

// HasSuggestedTrackableSpecialserviceId returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasSuggestedTrackableSpecialserviceId() bool {
	if o != nil && !IsNil(o.SuggestedTrackableSpecialserviceId) {
		return true
	}

	return false
}

// SetSuggestedTrackableSpecialserviceId gets a reference to the given string and assigns it to the SuggestedTrackableSpecialserviceId field.
func (o *ParcelTypesInner) SetSuggestedTrackableSpecialserviceId(v string) {
	o.SuggestedTrackableSpecialserviceId = &v
}

// GetWeightRules returns the WeightRules field value if set, zero value otherwise.
func (o *ParcelTypesInner) GetWeightRules() []ParcelTypesInnerWeightRulesInner {
	if o == nil || IsNil(o.WeightRules) {
		var ret []ParcelTypesInnerWeightRulesInner
		return ret
	}
	return o.WeightRules
}

// GetWeightRulesOk returns a tuple with the WeightRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelTypesInner) GetWeightRulesOk() ([]ParcelTypesInnerWeightRulesInner, bool) {
	if o == nil || IsNil(o.WeightRules) {
		return nil, false
	}
	return o.WeightRules, true
}

// HasWeightRules returns a boolean if a field has been set.
func (o *ParcelTypesInner) HasWeightRules() bool {
	if o != nil && !IsNil(o.WeightRules) {
		return true
	}

	return false
}

// SetWeightRules gets a reference to the given []ParcelTypesInnerWeightRulesInner and assigns it to the WeightRules field.
func (o *ParcelTypesInner) SetWeightRules(v []ParcelTypesInnerWeightRulesInner) {
	o.WeightRules = v
}

func (o ParcelTypesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParcelTypesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BrandedName) {
		toSerialize["brandedName"] = o.BrandedName
	}
	if !IsNil(o.Carrier) {
		toSerialize["carrier"] = o.Carrier
	}
	if !IsNil(o.DimensionRules) {
		toSerialize["dimensionRules"] = o.DimensionRules
	}
	if !IsNil(o.GroupName) {
		toSerialize["groupName"] = o.GroupName
	}
	if !IsNil(o.BrandedDimensions) {
		toSerialize["brandedDimensions"] = o.BrandedDimensions
	}
	if !IsNil(o.ParcelId) {
		toSerialize["parcelId"] = o.ParcelId
	}
	if !IsNil(o.IsBranded) {
		toSerialize["isBranded"] = o.IsBranded
	}
	if !IsNil(o.ParcelType) {
		toSerialize["parcelType"] = o.ParcelType
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.ServiceName) {
		toSerialize["serviceName"] = o.ServiceName
	}
	if !IsNil(o.SuggestedTrackableSpecialserviceId) {
		toSerialize["suggestedTrackableSpecialserviceId"] = o.SuggestedTrackableSpecialserviceId
	}
	if !IsNil(o.WeightRules) {
		toSerialize["weightRules"] = o.WeightRules
	}
	return toSerialize, nil
}

type NullableParcelTypesInner struct {
	value *ParcelTypesInner
	isSet bool
}

func (v NullableParcelTypesInner) Get() *ParcelTypesInner {
	return v.value
}

func (v *NullableParcelTypesInner) Set(val *ParcelTypesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableParcelTypesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableParcelTypesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParcelTypesInner(val *ParcelTypesInner) *NullableParcelTypesInner {
	return &NullableParcelTypesInner{value: val, isSet: true}
}

func (v NullableParcelTypesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParcelTypesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


