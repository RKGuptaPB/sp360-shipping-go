/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the InternationalShipmentResponseCustoms type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternationalShipmentResponseCustoms{}

// InternationalShipmentResponseCustoms struct for InternationalShipmentResponseCustoms
type InternationalShipmentResponseCustoms struct {
	CustomsInfo *InternationalShipmentResponseCustomsCustomsInfo `json:"customsInfo,omitempty"`
	CustomsItems []InternationalShipmentResponseCustomsCustomsItemsInner `json:"customsItems,omitempty"`
}

// NewInternationalShipmentResponseCustoms instantiates a new InternationalShipmentResponseCustoms object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternationalShipmentResponseCustoms() *InternationalShipmentResponseCustoms {
	this := InternationalShipmentResponseCustoms{}
	return &this
}

// NewInternationalShipmentResponseCustomsWithDefaults instantiates a new InternationalShipmentResponseCustoms object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternationalShipmentResponseCustomsWithDefaults() *InternationalShipmentResponseCustoms {
	this := InternationalShipmentResponseCustoms{}
	return &this
}

// GetCustomsInfo returns the CustomsInfo field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustoms) GetCustomsInfo() InternationalShipmentResponseCustomsCustomsInfo {
	if o == nil || IsNil(o.CustomsInfo) {
		var ret InternationalShipmentResponseCustomsCustomsInfo
		return ret
	}
	return *o.CustomsInfo
}

// GetCustomsInfoOk returns a tuple with the CustomsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustoms) GetCustomsInfoOk() (*InternationalShipmentResponseCustomsCustomsInfo, bool) {
	if o == nil || IsNil(o.CustomsInfo) {
		return nil, false
	}
	return o.CustomsInfo, true
}

// HasCustomsInfo returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustoms) HasCustomsInfo() bool {
	if o != nil && !IsNil(o.CustomsInfo) {
		return true
	}

	return false
}

// SetCustomsInfo gets a reference to the given InternationalShipmentResponseCustomsCustomsInfo and assigns it to the CustomsInfo field.
func (o *InternationalShipmentResponseCustoms) SetCustomsInfo(v InternationalShipmentResponseCustomsCustomsInfo) {
	o.CustomsInfo = &v
}

// GetCustomsItems returns the CustomsItems field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustoms) GetCustomsItems() []InternationalShipmentResponseCustomsCustomsItemsInner {
	if o == nil || IsNil(o.CustomsItems) {
		var ret []InternationalShipmentResponseCustomsCustomsItemsInner
		return ret
	}
	return o.CustomsItems
}

// GetCustomsItemsOk returns a tuple with the CustomsItems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustoms) GetCustomsItemsOk() ([]InternationalShipmentResponseCustomsCustomsItemsInner, bool) {
	if o == nil || IsNil(o.CustomsItems) {
		return nil, false
	}
	return o.CustomsItems, true
}

// HasCustomsItems returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustoms) HasCustomsItems() bool {
	if o != nil && !IsNil(o.CustomsItems) {
		return true
	}

	return false
}

// SetCustomsItems gets a reference to the given []InternationalShipmentResponseCustomsCustomsItemsInner and assigns it to the CustomsItems field.
func (o *InternationalShipmentResponseCustoms) SetCustomsItems(v []InternationalShipmentResponseCustomsCustomsItemsInner) {
	o.CustomsItems = v
}

func (o InternationalShipmentResponseCustoms) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternationalShipmentResponseCustoms) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomsInfo) {
		toSerialize["customsInfo"] = o.CustomsInfo
	}
	if !IsNil(o.CustomsItems) {
		toSerialize["customsItems"] = o.CustomsItems
	}
	return toSerialize, nil
}

type NullableInternationalShipmentResponseCustoms struct {
	value *InternationalShipmentResponseCustoms
	isSet bool
}

func (v NullableInternationalShipmentResponseCustoms) Get() *InternationalShipmentResponseCustoms {
	return v.value
}

func (v *NullableInternationalShipmentResponseCustoms) Set(val *InternationalShipmentResponseCustoms) {
	v.value = val
	v.isSet = true
}

func (v NullableInternationalShipmentResponseCustoms) IsSet() bool {
	return v.isSet
}

func (v *NullableInternationalShipmentResponseCustoms) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternationalShipmentResponseCustoms(val *InternationalShipmentResponseCustoms) *NullableInternationalShipmentResponseCustoms {
	return &NullableInternationalShipmentResponseCustoms{value: val, isSet: true}
}

func (v NullableInternationalShipmentResponseCustoms) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternationalShipmentResponseCustoms) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


