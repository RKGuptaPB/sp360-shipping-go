/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the MultipieceRateShopRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipieceRateShopRequest{}

// MultipieceRateShopRequest description
type MultipieceRateShopRequest struct {
	FromAddress *MultipieceRatesRequestFromAddress `json:"fromAddress,omitempty"`
	// description
	MultiPieceParcels []MultipieceRateShopRequestMultiPieceParcelsInner `json:"multiPieceParcels,omitempty"`
	// description
	CarrierAccounts []string `json:"carrierAccounts,omitempty"`
	ToAddress *MultipieceRatesRequestToAddress `json:"toAddress,omitempty"`
}

// NewMultipieceRateShopRequest instantiates a new MultipieceRateShopRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipieceRateShopRequest() *MultipieceRateShopRequest {
	this := MultipieceRateShopRequest{}
	return &this
}

// NewMultipieceRateShopRequestWithDefaults instantiates a new MultipieceRateShopRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipieceRateShopRequestWithDefaults() *MultipieceRateShopRequest {
	this := MultipieceRateShopRequest{}
	return &this
}

// GetFromAddress returns the FromAddress field value if set, zero value otherwise.
func (o *MultipieceRateShopRequest) GetFromAddress() MultipieceRatesRequestFromAddress {
	if o == nil || IsNil(o.FromAddress) {
		var ret MultipieceRatesRequestFromAddress
		return ret
	}
	return *o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRateShopRequest) GetFromAddressOk() (*MultipieceRatesRequestFromAddress, bool) {
	if o == nil || IsNil(o.FromAddress) {
		return nil, false
	}
	return o.FromAddress, true
}

// HasFromAddress returns a boolean if a field has been set.
func (o *MultipieceRateShopRequest) HasFromAddress() bool {
	if o != nil && !IsNil(o.FromAddress) {
		return true
	}

	return false
}

// SetFromAddress gets a reference to the given MultipieceRatesRequestFromAddress and assigns it to the FromAddress field.
func (o *MultipieceRateShopRequest) SetFromAddress(v MultipieceRatesRequestFromAddress) {
	o.FromAddress = &v
}

// GetMultiPieceParcels returns the MultiPieceParcels field value if set, zero value otherwise.
func (o *MultipieceRateShopRequest) GetMultiPieceParcels() []MultipieceRateShopRequestMultiPieceParcelsInner {
	if o == nil || IsNil(o.MultiPieceParcels) {
		var ret []MultipieceRateShopRequestMultiPieceParcelsInner
		return ret
	}
	return o.MultiPieceParcels
}

// GetMultiPieceParcelsOk returns a tuple with the MultiPieceParcels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRateShopRequest) GetMultiPieceParcelsOk() ([]MultipieceRateShopRequestMultiPieceParcelsInner, bool) {
	if o == nil || IsNil(o.MultiPieceParcels) {
		return nil, false
	}
	return o.MultiPieceParcels, true
}

// HasMultiPieceParcels returns a boolean if a field has been set.
func (o *MultipieceRateShopRequest) HasMultiPieceParcels() bool {
	if o != nil && !IsNil(o.MultiPieceParcels) {
		return true
	}

	return false
}

// SetMultiPieceParcels gets a reference to the given []MultipieceRateShopRequestMultiPieceParcelsInner and assigns it to the MultiPieceParcels field.
func (o *MultipieceRateShopRequest) SetMultiPieceParcels(v []MultipieceRateShopRequestMultiPieceParcelsInner) {
	o.MultiPieceParcels = v
}

// GetCarrierAccounts returns the CarrierAccounts field value if set, zero value otherwise.
func (o *MultipieceRateShopRequest) GetCarrierAccounts() []string {
	if o == nil || IsNil(o.CarrierAccounts) {
		var ret []string
		return ret
	}
	return o.CarrierAccounts
}

// GetCarrierAccountsOk returns a tuple with the CarrierAccounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRateShopRequest) GetCarrierAccountsOk() ([]string, bool) {
	if o == nil || IsNil(o.CarrierAccounts) {
		return nil, false
	}
	return o.CarrierAccounts, true
}

// HasCarrierAccounts returns a boolean if a field has been set.
func (o *MultipieceRateShopRequest) HasCarrierAccounts() bool {
	if o != nil && !IsNil(o.CarrierAccounts) {
		return true
	}

	return false
}

// SetCarrierAccounts gets a reference to the given []string and assigns it to the CarrierAccounts field.
func (o *MultipieceRateShopRequest) SetCarrierAccounts(v []string) {
	o.CarrierAccounts = v
}

// GetToAddress returns the ToAddress field value if set, zero value otherwise.
func (o *MultipieceRateShopRequest) GetToAddress() MultipieceRatesRequestToAddress {
	if o == nil || IsNil(o.ToAddress) {
		var ret MultipieceRatesRequestToAddress
		return ret
	}
	return *o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRateShopRequest) GetToAddressOk() (*MultipieceRatesRequestToAddress, bool) {
	if o == nil || IsNil(o.ToAddress) {
		return nil, false
	}
	return o.ToAddress, true
}

// HasToAddress returns a boolean if a field has been set.
func (o *MultipieceRateShopRequest) HasToAddress() bool {
	if o != nil && !IsNil(o.ToAddress) {
		return true
	}

	return false
}

// SetToAddress gets a reference to the given MultipieceRatesRequestToAddress and assigns it to the ToAddress field.
func (o *MultipieceRateShopRequest) SetToAddress(v MultipieceRatesRequestToAddress) {
	o.ToAddress = &v
}

func (o MultipieceRateShopRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipieceRateShopRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromAddress) {
		toSerialize["fromAddress"] = o.FromAddress
	}
	if !IsNil(o.MultiPieceParcels) {
		toSerialize["multiPieceParcels"] = o.MultiPieceParcels
	}
	if !IsNil(o.CarrierAccounts) {
		toSerialize["carrierAccounts"] = o.CarrierAccounts
	}
	if !IsNil(o.ToAddress) {
		toSerialize["toAddress"] = o.ToAddress
	}
	return toSerialize, nil
}

type NullableMultipieceRateShopRequest struct {
	value *MultipieceRateShopRequest
	isSet bool
}

func (v NullableMultipieceRateShopRequest) Get() *MultipieceRateShopRequest {
	return v.value
}

func (v *NullableMultipieceRateShopRequest) Set(val *MultipieceRateShopRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipieceRateShopRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipieceRateShopRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipieceRateShopRequest(val *MultipieceRateShopRequest) *NullableMultipieceRateShopRequest {
	return &NullableMultipieceRateShopRequest{value: val, isSet: true}
}

func (v NullableMultipieceRateShopRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipieceRateShopRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


