/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the NotFoundErrorsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotFoundErrorsInner{}

// NotFoundErrorsInner struct for NotFoundErrorsInner
type NotFoundErrorsInner struct {
	// Error code(s) that appear due HTTP 404 Page or File not found.
	ErrorCode *string `json:"errorCode,omitempty"`
	// The HTTP 404 Not Found response status code indicates that the server cannot find the requested resource.
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// A unique identifier for the error, for example 0100025, 1110017, or 1090001.
	AdditionalCode *string `json:"additionalCode,omitempty"`
	// Additional information about the error. This error 'Not Found' might appear due to `Shipment Not Found`, `No Shipments to close`, or `Original Transaction not found`.
	AdditionalInfo *string `json:"additionalInfo,omitempty"`
	AdditionalParameters []string `json:"additionalParameters,omitempty"`
}

// NewNotFoundErrorsInner instantiates a new NotFoundErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotFoundErrorsInner() *NotFoundErrorsInner {
	this := NotFoundErrorsInner{}
	return &this
}

// NewNotFoundErrorsInnerWithDefaults instantiates a new NotFoundErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotFoundErrorsInnerWithDefaults() *NotFoundErrorsInner {
	this := NotFoundErrorsInner{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *NotFoundErrorsInner) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundErrorsInner) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *NotFoundErrorsInner) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *NotFoundErrorsInner) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *NotFoundErrorsInner) GetErrorDescription() string {
	if o == nil || IsNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundErrorsInner) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *NotFoundErrorsInner) HasErrorDescription() bool {
	if o != nil && !IsNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *NotFoundErrorsInner) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetAdditionalCode returns the AdditionalCode field value if set, zero value otherwise.
func (o *NotFoundErrorsInner) GetAdditionalCode() string {
	if o == nil || IsNil(o.AdditionalCode) {
		var ret string
		return ret
	}
	return *o.AdditionalCode
}

// GetAdditionalCodeOk returns a tuple with the AdditionalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundErrorsInner) GetAdditionalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalCode) {
		return nil, false
	}
	return o.AdditionalCode, true
}

// HasAdditionalCode returns a boolean if a field has been set.
func (o *NotFoundErrorsInner) HasAdditionalCode() bool {
	if o != nil && !IsNil(o.AdditionalCode) {
		return true
	}

	return false
}

// SetAdditionalCode gets a reference to the given string and assigns it to the AdditionalCode field.
func (o *NotFoundErrorsInner) SetAdditionalCode(v string) {
	o.AdditionalCode = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *NotFoundErrorsInner) GetAdditionalInfo() string {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret string
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundErrorsInner) GetAdditionalInfoOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *NotFoundErrorsInner) HasAdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given string and assigns it to the AdditionalInfo field.
func (o *NotFoundErrorsInner) SetAdditionalInfo(v string) {
	o.AdditionalInfo = &v
}

// GetAdditionalParameters returns the AdditionalParameters field value if set, zero value otherwise.
func (o *NotFoundErrorsInner) GetAdditionalParameters() []string {
	if o == nil || IsNil(o.AdditionalParameters) {
		var ret []string
		return ret
	}
	return o.AdditionalParameters
}

// GetAdditionalParametersOk returns a tuple with the AdditionalParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotFoundErrorsInner) GetAdditionalParametersOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalParameters) {
		return nil, false
	}
	return o.AdditionalParameters, true
}

// HasAdditionalParameters returns a boolean if a field has been set.
func (o *NotFoundErrorsInner) HasAdditionalParameters() bool {
	if o != nil && !IsNil(o.AdditionalParameters) {
		return true
	}

	return false
}

// SetAdditionalParameters gets a reference to the given []string and assigns it to the AdditionalParameters field.
func (o *NotFoundErrorsInner) SetAdditionalParameters(v []string) {
	o.AdditionalParameters = v
}

func (o NotFoundErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotFoundErrorsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.ErrorDescription) {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if !IsNil(o.AdditionalCode) {
		toSerialize["additionalCode"] = o.AdditionalCode
	}
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	if !IsNil(o.AdditionalParameters) {
		toSerialize["additionalParameters"] = o.AdditionalParameters
	}
	return toSerialize, nil
}

type NullableNotFoundErrorsInner struct {
	value *NotFoundErrorsInner
	isSet bool
}

func (v NullableNotFoundErrorsInner) Get() *NotFoundErrorsInner {
	return v.value
}

func (v *NullableNotFoundErrorsInner) Set(val *NotFoundErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableNotFoundErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableNotFoundErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotFoundErrorsInner(val *NotFoundErrorsInner) *NullableNotFoundErrorsInner {
	return &NullableNotFoundErrorsInner{value: val, isSet: true}
}

func (v NullableNotFoundErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotFoundErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


