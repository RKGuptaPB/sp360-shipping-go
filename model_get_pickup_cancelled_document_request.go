/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the GetPickupCancelledDocumentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPickupCancelledDocumentRequest{}

// GetPickupCancelledDocumentRequest struct for GetPickupCancelledDocumentRequest
type GetPickupCancelledDocumentRequest struct {
	// description
	PickupIds []string `json:"pickupIds,omitempty"`
}

// NewGetPickupCancelledDocumentRequest instantiates a new GetPickupCancelledDocumentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPickupCancelledDocumentRequest() *GetPickupCancelledDocumentRequest {
	this := GetPickupCancelledDocumentRequest{}
	return &this
}

// NewGetPickupCancelledDocumentRequestWithDefaults instantiates a new GetPickupCancelledDocumentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPickupCancelledDocumentRequestWithDefaults() *GetPickupCancelledDocumentRequest {
	this := GetPickupCancelledDocumentRequest{}
	return &this
}

// GetPickupIds returns the PickupIds field value if set, zero value otherwise.
func (o *GetPickupCancelledDocumentRequest) GetPickupIds() []string {
	if o == nil || IsNil(o.PickupIds) {
		var ret []string
		return ret
	}
	return o.PickupIds
}

// GetPickupIdsOk returns a tuple with the PickupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPickupCancelledDocumentRequest) GetPickupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.PickupIds) {
		return nil, false
	}
	return o.PickupIds, true
}

// HasPickupIds returns a boolean if a field has been set.
func (o *GetPickupCancelledDocumentRequest) HasPickupIds() bool {
	if o != nil && !IsNil(o.PickupIds) {
		return true
	}

	return false
}

// SetPickupIds gets a reference to the given []string and assigns it to the PickupIds field.
func (o *GetPickupCancelledDocumentRequest) SetPickupIds(v []string) {
	o.PickupIds = v
}

func (o GetPickupCancelledDocumentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPickupCancelledDocumentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PickupIds) {
		toSerialize["pickupIds"] = o.PickupIds
	}
	return toSerialize, nil
}

type NullableGetPickupCancelledDocumentRequest struct {
	value *GetPickupCancelledDocumentRequest
	isSet bool
}

func (v NullableGetPickupCancelledDocumentRequest) Get() *GetPickupCancelledDocumentRequest {
	return v.value
}

func (v *NullableGetPickupCancelledDocumentRequest) Set(val *GetPickupCancelledDocumentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPickupCancelledDocumentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPickupCancelledDocumentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPickupCancelledDocumentRequest(val *GetPickupCancelledDocumentRequest) *NullableGetPickupCancelledDocumentRequest {
	return &NullableGetPickupCancelledDocumentRequest{value: val, isSet: true}
}

func (v NullableGetPickupCancelledDocumentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPickupCancelledDocumentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


