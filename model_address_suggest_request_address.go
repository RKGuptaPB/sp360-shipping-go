/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddressSuggestRequestAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressSuggestRequestAddress{}

// AddressSuggestRequestAddress struct for AddressSuggestRequestAddress
type AddressSuggestRequestAddress struct {
	// The addressLine1 can contain the Flat number, Building or Apartment Name/number (if any) or company name (if not residential).
	AddressLine1 string `json:"addressLine1"`
	// The addressLine2 contains Street address or Landmark (if any). 
	AddressLine2 *string `json:"addressLine2,omitempty"`
	// The addressLine3 contains P.O.Box (if any) near the address.
	AddressLine3 *string `json:"addressLine3,omitempty"`
	// The name of the city or town to where the address belongs.
	CityTown string `json:"cityTown"`
	// This indicates the two-character ISO code of the country from the ISO country list.
	CountryCode string `json:"countryCode"`
	// Name of the person to which this address points.
	Name *string `json:"name,omitempty"`
	// The postal code or ZIP code of the address. For US addresses, use either the 5-digit or 9-digit ZIP code in one of the following formats: '12345' or '12345-6789'. If you use a different format, such as 12345- or 123451234, will receive an error.
	PostalCode string `json:"postalCode"`
	// The State or Province of the address. For a US or Canadian address, it is the 2-letter state or province code. 
	StateProvince string `json:"stateProvince"`
}

type _AddressSuggestRequestAddress AddressSuggestRequestAddress

// NewAddressSuggestRequestAddress instantiates a new AddressSuggestRequestAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressSuggestRequestAddress(addressLine1 string, cityTown string, countryCode string, postalCode string, stateProvince string) *AddressSuggestRequestAddress {
	this := AddressSuggestRequestAddress{}
	this.AddressLine1 = addressLine1
	this.CityTown = cityTown
	this.CountryCode = countryCode
	this.PostalCode = postalCode
	this.StateProvince = stateProvince
	return &this
}

// NewAddressSuggestRequestAddressWithDefaults instantiates a new AddressSuggestRequestAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressSuggestRequestAddressWithDefaults() *AddressSuggestRequestAddress {
	this := AddressSuggestRequestAddress{}
	return &this
}

// GetAddressLine1 returns the AddressLine1 field value
func (o *AddressSuggestRequestAddress) GetAddressLine1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AddressLine1
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value
// and a boolean to check if the value has been set.
func (o *AddressSuggestRequestAddress) GetAddressLine1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AddressLine1, true
}

// SetAddressLine1 sets field value
func (o *AddressSuggestRequestAddress) SetAddressLine1(v string) {
	o.AddressLine1 = v
}

// GetAddressLine2 returns the AddressLine2 field value if set, zero value otherwise.
func (o *AddressSuggestRequestAddress) GetAddressLine2() string {
	if o == nil || IsNil(o.AddressLine2) {
		var ret string
		return ret
	}
	return *o.AddressLine2
}

// GetAddressLine2Ok returns a tuple with the AddressLine2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressSuggestRequestAddress) GetAddressLine2Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine2) {
		return nil, false
	}
	return o.AddressLine2, true
}

// HasAddressLine2 returns a boolean if a field has been set.
func (o *AddressSuggestRequestAddress) HasAddressLine2() bool {
	if o != nil && !IsNil(o.AddressLine2) {
		return true
	}

	return false
}

// SetAddressLine2 gets a reference to the given string and assigns it to the AddressLine2 field.
func (o *AddressSuggestRequestAddress) SetAddressLine2(v string) {
	o.AddressLine2 = &v
}

// GetAddressLine3 returns the AddressLine3 field value if set, zero value otherwise.
func (o *AddressSuggestRequestAddress) GetAddressLine3() string {
	if o == nil || IsNil(o.AddressLine3) {
		var ret string
		return ret
	}
	return *o.AddressLine3
}

// GetAddressLine3Ok returns a tuple with the AddressLine3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressSuggestRequestAddress) GetAddressLine3Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine3) {
		return nil, false
	}
	return o.AddressLine3, true
}

// HasAddressLine3 returns a boolean if a field has been set.
func (o *AddressSuggestRequestAddress) HasAddressLine3() bool {
	if o != nil && !IsNil(o.AddressLine3) {
		return true
	}

	return false
}

// SetAddressLine3 gets a reference to the given string and assigns it to the AddressLine3 field.
func (o *AddressSuggestRequestAddress) SetAddressLine3(v string) {
	o.AddressLine3 = &v
}

// GetCityTown returns the CityTown field value
func (o *AddressSuggestRequestAddress) GetCityTown() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CityTown
}

// GetCityTownOk returns a tuple with the CityTown field value
// and a boolean to check if the value has been set.
func (o *AddressSuggestRequestAddress) GetCityTownOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CityTown, true
}

// SetCityTown sets field value
func (o *AddressSuggestRequestAddress) SetCityTown(v string) {
	o.CityTown = v
}

// GetCountryCode returns the CountryCode field value
func (o *AddressSuggestRequestAddress) GetCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value
// and a boolean to check if the value has been set.
func (o *AddressSuggestRequestAddress) GetCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CountryCode, true
}

// SetCountryCode sets field value
func (o *AddressSuggestRequestAddress) SetCountryCode(v string) {
	o.CountryCode = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AddressSuggestRequestAddress) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressSuggestRequestAddress) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AddressSuggestRequestAddress) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AddressSuggestRequestAddress) SetName(v string) {
	o.Name = &v
}

// GetPostalCode returns the PostalCode field value
func (o *AddressSuggestRequestAddress) GetPostalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
func (o *AddressSuggestRequestAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostalCode, true
}

// SetPostalCode sets field value
func (o *AddressSuggestRequestAddress) SetPostalCode(v string) {
	o.PostalCode = v
}

// GetStateProvince returns the StateProvince field value
func (o *AddressSuggestRequestAddress) GetStateProvince() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StateProvince
}

// GetStateProvinceOk returns a tuple with the StateProvince field value
// and a boolean to check if the value has been set.
func (o *AddressSuggestRequestAddress) GetStateProvinceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StateProvince, true
}

// SetStateProvince sets field value
func (o *AddressSuggestRequestAddress) SetStateProvince(v string) {
	o.StateProvince = v
}

func (o AddressSuggestRequestAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressSuggestRequestAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["addressLine1"] = o.AddressLine1
	if !IsNil(o.AddressLine2) {
		toSerialize["addressLine2"] = o.AddressLine2
	}
	if !IsNil(o.AddressLine3) {
		toSerialize["addressLine3"] = o.AddressLine3
	}
	toSerialize["cityTown"] = o.CityTown
	toSerialize["countryCode"] = o.CountryCode
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["postalCode"] = o.PostalCode
	toSerialize["stateProvince"] = o.StateProvince
	return toSerialize, nil
}

func (o *AddressSuggestRequestAddress) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"addressLine1",
		"cityTown",
		"countryCode",
		"postalCode",
		"stateProvince",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddressSuggestRequestAddress := _AddressSuggestRequestAddress{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddressSuggestRequestAddress)

	if err != nil {
		return err
	}

	*o = AddressSuggestRequestAddress(varAddressSuggestRequestAddress)

	return err
}

type NullableAddressSuggestRequestAddress struct {
	value *AddressSuggestRequestAddress
	isSet bool
}

func (v NullableAddressSuggestRequestAddress) Get() *AddressSuggestRequestAddress {
	return v.value
}

func (v *NullableAddressSuggestRequestAddress) Set(val *AddressSuggestRequestAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressSuggestRequestAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressSuggestRequestAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressSuggestRequestAddress(val *AddressSuggestRequestAddress) *NullableAddressSuggestRequestAddress {
	return &NullableAddressSuggestRequestAddress{value: val, isSet: true}
}

func (v NullableAddressSuggestRequestAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressSuggestRequestAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


