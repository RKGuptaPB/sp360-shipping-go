/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the SignatureFileResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignatureFileResponse{}

// SignatureFileResponse struct for SignatureFileResponse
type SignatureFileResponse struct {
	// This indicates the shipment identifier.
	ShipmentId *string `json:"shipmentId,omitempty"`
	// Signature image link to download
	SignatureFileURL *string `json:"signatureFileURL,omitempty"`
}

// NewSignatureFileResponse instantiates a new SignatureFileResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignatureFileResponse() *SignatureFileResponse {
	this := SignatureFileResponse{}
	return &this
}

// NewSignatureFileResponseWithDefaults instantiates a new SignatureFileResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignatureFileResponseWithDefaults() *SignatureFileResponse {
	this := SignatureFileResponse{}
	return &this
}

// GetShipmentId returns the ShipmentId field value if set, zero value otherwise.
func (o *SignatureFileResponse) GetShipmentId() string {
	if o == nil || IsNil(o.ShipmentId) {
		var ret string
		return ret
	}
	return *o.ShipmentId
}

// GetShipmentIdOk returns a tuple with the ShipmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureFileResponse) GetShipmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentId) {
		return nil, false
	}
	return o.ShipmentId, true
}

// HasShipmentId returns a boolean if a field has been set.
func (o *SignatureFileResponse) HasShipmentId() bool {
	if o != nil && !IsNil(o.ShipmentId) {
		return true
	}

	return false
}

// SetShipmentId gets a reference to the given string and assigns it to the ShipmentId field.
func (o *SignatureFileResponse) SetShipmentId(v string) {
	o.ShipmentId = &v
}

// GetSignatureFileURL returns the SignatureFileURL field value if set, zero value otherwise.
func (o *SignatureFileResponse) GetSignatureFileURL() string {
	if o == nil || IsNil(o.SignatureFileURL) {
		var ret string
		return ret
	}
	return *o.SignatureFileURL
}

// GetSignatureFileURLOk returns a tuple with the SignatureFileURL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignatureFileResponse) GetSignatureFileURLOk() (*string, bool) {
	if o == nil || IsNil(o.SignatureFileURL) {
		return nil, false
	}
	return o.SignatureFileURL, true
}

// HasSignatureFileURL returns a boolean if a field has been set.
func (o *SignatureFileResponse) HasSignatureFileURL() bool {
	if o != nil && !IsNil(o.SignatureFileURL) {
		return true
	}

	return false
}

// SetSignatureFileURL gets a reference to the given string and assigns it to the SignatureFileURL field.
func (o *SignatureFileResponse) SetSignatureFileURL(v string) {
	o.SignatureFileURL = &v
}

func (o SignatureFileResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignatureFileResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShipmentId) {
		toSerialize["shipmentId"] = o.ShipmentId
	}
	if !IsNil(o.SignatureFileURL) {
		toSerialize["signatureFileURL"] = o.SignatureFileURL
	}
	return toSerialize, nil
}

type NullableSignatureFileResponse struct {
	value *SignatureFileResponse
	isSet bool
}

func (v NullableSignatureFileResponse) Get() *SignatureFileResponse {
	return v.value
}

func (v *NullableSignatureFileResponse) Set(val *SignatureFileResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSignatureFileResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSignatureFileResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignatureFileResponse(val *SignatureFileResponse) *NullableSignatureFileResponse {
	return &NullableSignatureFileResponse{value: val, isSet: true}
}

func (v NullableSignatureFileResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignatureFileResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


