/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the MultipieceShipmentResponseLabelLayoutInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipieceShipmentResponseLabelLayoutInner{}

// MultipieceShipmentResponseLabelLayoutInner description
type MultipieceShipmentResponseLabelLayoutInner struct {
	// Content Type of the document e.g. DOCUMENT_REFERENCE. [IN/OUT]
	ContentType *string `json:"contentType,omitempty"`
	// description
	Contents *string `json:"contents,omitempty"`
	// description
	FileFormat *string `json:"fileFormat,omitempty"`
	// description
	Size *string `json:"size,omitempty"`
	// description
	Type *string `json:"type,omitempty"`
}

// NewMultipieceShipmentResponseLabelLayoutInner instantiates a new MultipieceShipmentResponseLabelLayoutInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipieceShipmentResponseLabelLayoutInner() *MultipieceShipmentResponseLabelLayoutInner {
	this := MultipieceShipmentResponseLabelLayoutInner{}
	return &this
}

// NewMultipieceShipmentResponseLabelLayoutInnerWithDefaults instantiates a new MultipieceShipmentResponseLabelLayoutInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipieceShipmentResponseLabelLayoutInnerWithDefaults() *MultipieceShipmentResponseLabelLayoutInner {
	this := MultipieceShipmentResponseLabelLayoutInner{}
	return &this
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *MultipieceShipmentResponseLabelLayoutInner) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponseLabelLayoutInner) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *MultipieceShipmentResponseLabelLayoutInner) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *MultipieceShipmentResponseLabelLayoutInner) SetContentType(v string) {
	o.ContentType = &v
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *MultipieceShipmentResponseLabelLayoutInner) GetContents() string {
	if o == nil || IsNil(o.Contents) {
		var ret string
		return ret
	}
	return *o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponseLabelLayoutInner) GetContentsOk() (*string, bool) {
	if o == nil || IsNil(o.Contents) {
		return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *MultipieceShipmentResponseLabelLayoutInner) HasContents() bool {
	if o != nil && !IsNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given string and assigns it to the Contents field.
func (o *MultipieceShipmentResponseLabelLayoutInner) SetContents(v string) {
	o.Contents = &v
}

// GetFileFormat returns the FileFormat field value if set, zero value otherwise.
func (o *MultipieceShipmentResponseLabelLayoutInner) GetFileFormat() string {
	if o == nil || IsNil(o.FileFormat) {
		var ret string
		return ret
	}
	return *o.FileFormat
}

// GetFileFormatOk returns a tuple with the FileFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponseLabelLayoutInner) GetFileFormatOk() (*string, bool) {
	if o == nil || IsNil(o.FileFormat) {
		return nil, false
	}
	return o.FileFormat, true
}

// HasFileFormat returns a boolean if a field has been set.
func (o *MultipieceShipmentResponseLabelLayoutInner) HasFileFormat() bool {
	if o != nil && !IsNil(o.FileFormat) {
		return true
	}

	return false
}

// SetFileFormat gets a reference to the given string and assigns it to the FileFormat field.
func (o *MultipieceShipmentResponseLabelLayoutInner) SetFileFormat(v string) {
	o.FileFormat = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *MultipieceShipmentResponseLabelLayoutInner) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponseLabelLayoutInner) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *MultipieceShipmentResponseLabelLayoutInner) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *MultipieceShipmentResponseLabelLayoutInner) SetSize(v string) {
	o.Size = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MultipieceShipmentResponseLabelLayoutInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponseLabelLayoutInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MultipieceShipmentResponseLabelLayoutInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MultipieceShipmentResponseLabelLayoutInner) SetType(v string) {
	o.Type = &v
}

func (o MultipieceShipmentResponseLabelLayoutInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipieceShipmentResponseLabelLayoutInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContentType) {
		toSerialize["contentType"] = o.ContentType
	}
	if !IsNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	if !IsNil(o.FileFormat) {
		toSerialize["fileFormat"] = o.FileFormat
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableMultipieceShipmentResponseLabelLayoutInner struct {
	value *MultipieceShipmentResponseLabelLayoutInner
	isSet bool
}

func (v NullableMultipieceShipmentResponseLabelLayoutInner) Get() *MultipieceShipmentResponseLabelLayoutInner {
	return v.value
}

func (v *NullableMultipieceShipmentResponseLabelLayoutInner) Set(val *MultipieceShipmentResponseLabelLayoutInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipieceShipmentResponseLabelLayoutInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipieceShipmentResponseLabelLayoutInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipieceShipmentResponseLabelLayoutInner(val *MultipieceShipmentResponseLabelLayoutInner) *NullableMultipieceShipmentResponseLabelLayoutInner {
	return &NullableMultipieceShipmentResponseLabelLayoutInner{value: val, isSet: true}
}

func (v NullableMultipieceShipmentResponseLabelLayoutInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipieceShipmentResponseLabelLayoutInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


