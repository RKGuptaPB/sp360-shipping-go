/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the ShipmentReprintCancelV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentReprintCancelV2{}

// ShipmentReprintCancelV2 struct for ShipmentReprintCancelV2
type ShipmentReprintCancelV2 struct {
	// The shipmentId is a unique identifier for an individual Shipment.
	ShipmentId *string `json:"shipmentId,omitempty"`
	References *ShipmentReprintCancelV2References `json:"references,omitempty"`
}

// NewShipmentReprintCancelV2 instantiates a new ShipmentReprintCancelV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentReprintCancelV2() *ShipmentReprintCancelV2 {
	this := ShipmentReprintCancelV2{}
	return &this
}

// NewShipmentReprintCancelV2WithDefaults instantiates a new ShipmentReprintCancelV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentReprintCancelV2WithDefaults() *ShipmentReprintCancelV2 {
	this := ShipmentReprintCancelV2{}
	return &this
}

// GetShipmentId returns the ShipmentId field value if set, zero value otherwise.
func (o *ShipmentReprintCancelV2) GetShipmentId() string {
	if o == nil || IsNil(o.ShipmentId) {
		var ret string
		return ret
	}
	return *o.ShipmentId
}

// GetShipmentIdOk returns a tuple with the ShipmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentReprintCancelV2) GetShipmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentId) {
		return nil, false
	}
	return o.ShipmentId, true
}

// HasShipmentId returns a boolean if a field has been set.
func (o *ShipmentReprintCancelV2) HasShipmentId() bool {
	if o != nil && !IsNil(o.ShipmentId) {
		return true
	}

	return false
}

// SetShipmentId gets a reference to the given string and assigns it to the ShipmentId field.
func (o *ShipmentReprintCancelV2) SetShipmentId(v string) {
	o.ShipmentId = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *ShipmentReprintCancelV2) GetReferences() ShipmentReprintCancelV2References {
	if o == nil || IsNil(o.References) {
		var ret ShipmentReprintCancelV2References
		return ret
	}
	return *o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentReprintCancelV2) GetReferencesOk() (*ShipmentReprintCancelV2References, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *ShipmentReprintCancelV2) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given ShipmentReprintCancelV2References and assigns it to the References field.
func (o *ShipmentReprintCancelV2) SetReferences(v ShipmentReprintCancelV2References) {
	o.References = &v
}

func (o ShipmentReprintCancelV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentReprintCancelV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShipmentId) {
		toSerialize["shipmentId"] = o.ShipmentId
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	return toSerialize, nil
}

type NullableShipmentReprintCancelV2 struct {
	value *ShipmentReprintCancelV2
	isSet bool
}

func (v NullableShipmentReprintCancelV2) Get() *ShipmentReprintCancelV2 {
	return v.value
}

func (v *NullableShipmentReprintCancelV2) Set(val *ShipmentReprintCancelV2) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentReprintCancelV2) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentReprintCancelV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentReprintCancelV2(val *ShipmentReprintCancelV2) *NullableShipmentReprintCancelV2 {
	return &NullableShipmentReprintCancelV2{value: val, isSet: true}
}

func (v NullableShipmentReprintCancelV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentReprintCancelV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


