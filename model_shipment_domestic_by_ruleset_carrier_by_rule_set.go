/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the ShipmentDomesticByRulesetCarrierByRuleSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentDomesticByRulesetCarrierByRuleSet{}

// ShipmentDomesticByRulesetCarrierByRuleSet User can create the Shipment using Rule Set.<br /> By Rule Set means a rule that is defined as one or more conditions resulting in an action (or more than one action). <br /> The conditions and actions can vary widely.
type ShipmentDomesticByRulesetCarrierByRuleSet struct {
	// The Rule Type is a condition applied to RateGroup by Product side, that can be applicable for a client or set of client users.
	RuleType *string `json:"ruleType,omitempty"`
	// This is a unique identifier assigned to the Rate Group, which is used in the shipment creation.
	RateGroupID *string `json:"rateGroupID,omitempty"`
	// This is a unique identifier assigned to the Rule Set created for some conditions.
	RuleSetId *string `json:"ruleSetId,omitempty"`
	// This is for Hazardous material.
	Hazardous *string `json:"Hazardous,omitempty"`
}

// NewShipmentDomesticByRulesetCarrierByRuleSet instantiates a new ShipmentDomesticByRulesetCarrierByRuleSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentDomesticByRulesetCarrierByRuleSet() *ShipmentDomesticByRulesetCarrierByRuleSet {
	this := ShipmentDomesticByRulesetCarrierByRuleSet{}
	return &this
}

// NewShipmentDomesticByRulesetCarrierByRuleSetWithDefaults instantiates a new ShipmentDomesticByRulesetCarrierByRuleSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentDomesticByRulesetCarrierByRuleSetWithDefaults() *ShipmentDomesticByRulesetCarrierByRuleSet {
	this := ShipmentDomesticByRulesetCarrierByRuleSet{}
	return &this
}

// GetRuleType returns the RuleType field value if set, zero value otherwise.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) GetRuleType() string {
	if o == nil || IsNil(o.RuleType) {
		var ret string
		return ret
	}
	return *o.RuleType
}

// GetRuleTypeOk returns a tuple with the RuleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) GetRuleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RuleType) {
		return nil, false
	}
	return o.RuleType, true
}

// HasRuleType returns a boolean if a field has been set.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) HasRuleType() bool {
	if o != nil && !IsNil(o.RuleType) {
		return true
	}

	return false
}

// SetRuleType gets a reference to the given string and assigns it to the RuleType field.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) SetRuleType(v string) {
	o.RuleType = &v
}

// GetRateGroupID returns the RateGroupID field value if set, zero value otherwise.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) GetRateGroupID() string {
	if o == nil || IsNil(o.RateGroupID) {
		var ret string
		return ret
	}
	return *o.RateGroupID
}

// GetRateGroupIDOk returns a tuple with the RateGroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) GetRateGroupIDOk() (*string, bool) {
	if o == nil || IsNil(o.RateGroupID) {
		return nil, false
	}
	return o.RateGroupID, true
}

// HasRateGroupID returns a boolean if a field has been set.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) HasRateGroupID() bool {
	if o != nil && !IsNil(o.RateGroupID) {
		return true
	}

	return false
}

// SetRateGroupID gets a reference to the given string and assigns it to the RateGroupID field.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) SetRateGroupID(v string) {
	o.RateGroupID = &v
}

// GetRuleSetId returns the RuleSetId field value if set, zero value otherwise.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) GetRuleSetId() string {
	if o == nil || IsNil(o.RuleSetId) {
		var ret string
		return ret
	}
	return *o.RuleSetId
}

// GetRuleSetIdOk returns a tuple with the RuleSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) GetRuleSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.RuleSetId) {
		return nil, false
	}
	return o.RuleSetId, true
}

// HasRuleSetId returns a boolean if a field has been set.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) HasRuleSetId() bool {
	if o != nil && !IsNil(o.RuleSetId) {
		return true
	}

	return false
}

// SetRuleSetId gets a reference to the given string and assigns it to the RuleSetId field.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) SetRuleSetId(v string) {
	o.RuleSetId = &v
}

// GetHazardous returns the Hazardous field value if set, zero value otherwise.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) GetHazardous() string {
	if o == nil || IsNil(o.Hazardous) {
		var ret string
		return ret
	}
	return *o.Hazardous
}

// GetHazardousOk returns a tuple with the Hazardous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) GetHazardousOk() (*string, bool) {
	if o == nil || IsNil(o.Hazardous) {
		return nil, false
	}
	return o.Hazardous, true
}

// HasHazardous returns a boolean if a field has been set.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) HasHazardous() bool {
	if o != nil && !IsNil(o.Hazardous) {
		return true
	}

	return false
}

// SetHazardous gets a reference to the given string and assigns it to the Hazardous field.
func (o *ShipmentDomesticByRulesetCarrierByRuleSet) SetHazardous(v string) {
	o.Hazardous = &v
}

func (o ShipmentDomesticByRulesetCarrierByRuleSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentDomesticByRulesetCarrierByRuleSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RuleType) {
		toSerialize["ruleType"] = o.RuleType
	}
	if !IsNil(o.RateGroupID) {
		toSerialize["rateGroupID"] = o.RateGroupID
	}
	if !IsNil(o.RuleSetId) {
		toSerialize["ruleSetId"] = o.RuleSetId
	}
	if !IsNil(o.Hazardous) {
		toSerialize["Hazardous"] = o.Hazardous
	}
	return toSerialize, nil
}

type NullableShipmentDomesticByRulesetCarrierByRuleSet struct {
	value *ShipmentDomesticByRulesetCarrierByRuleSet
	isSet bool
}

func (v NullableShipmentDomesticByRulesetCarrierByRuleSet) Get() *ShipmentDomesticByRulesetCarrierByRuleSet {
	return v.value
}

func (v *NullableShipmentDomesticByRulesetCarrierByRuleSet) Set(val *ShipmentDomesticByRulesetCarrierByRuleSet) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentDomesticByRulesetCarrierByRuleSet) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentDomesticByRulesetCarrierByRuleSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentDomesticByRulesetCarrierByRuleSet(val *ShipmentDomesticByRulesetCarrierByRuleSet) *NullableShipmentDomesticByRulesetCarrierByRuleSet {
	return &NullableShipmentDomesticByRulesetCarrierByRuleSet{value: val, isSet: true}
}

func (v NullableShipmentDomesticByRulesetCarrierByRuleSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentDomesticByRulesetCarrierByRuleSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


