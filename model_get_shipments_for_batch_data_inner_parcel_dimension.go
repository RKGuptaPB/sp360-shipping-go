/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the GetShipmentsForBatchDataInnerParcelDimension type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetShipmentsForBatchDataInnerParcelDimension{}

// GetShipmentsForBatchDataInnerParcelDimension struct for GetShipmentsForBatchDataInnerParcelDimension
type GetShipmentsForBatchDataInnerParcelDimension struct {
	Height *float32 `json:"height,omitempty"`
	Length *float32 `json:"length,omitempty"`
	UnitOfMeasurement *string `json:"unitOfMeasurement,omitempty"`
	Width *float32 `json:"width,omitempty"`
}

// NewGetShipmentsForBatchDataInnerParcelDimension instantiates a new GetShipmentsForBatchDataInnerParcelDimension object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetShipmentsForBatchDataInnerParcelDimension() *GetShipmentsForBatchDataInnerParcelDimension {
	this := GetShipmentsForBatchDataInnerParcelDimension{}
	return &this
}

// NewGetShipmentsForBatchDataInnerParcelDimensionWithDefaults instantiates a new GetShipmentsForBatchDataInnerParcelDimension object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetShipmentsForBatchDataInnerParcelDimensionWithDefaults() *GetShipmentsForBatchDataInnerParcelDimension {
	this := GetShipmentsForBatchDataInnerParcelDimension{}
	return &this
}

// GetHeight returns the Height field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInnerParcelDimension) GetHeight() float32 {
	if o == nil || IsNil(o.Height) {
		var ret float32
		return ret
	}
	return *o.Height
}

// GetHeightOk returns a tuple with the Height field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInnerParcelDimension) GetHeightOk() (*float32, bool) {
	if o == nil || IsNil(o.Height) {
		return nil, false
	}
	return o.Height, true
}

// HasHeight returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInnerParcelDimension) HasHeight() bool {
	if o != nil && !IsNil(o.Height) {
		return true
	}

	return false
}

// SetHeight gets a reference to the given float32 and assigns it to the Height field.
func (o *GetShipmentsForBatchDataInnerParcelDimension) SetHeight(v float32) {
	o.Height = &v
}

// GetLength returns the Length field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInnerParcelDimension) GetLength() float32 {
	if o == nil || IsNil(o.Length) {
		var ret float32
		return ret
	}
	return *o.Length
}

// GetLengthOk returns a tuple with the Length field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInnerParcelDimension) GetLengthOk() (*float32, bool) {
	if o == nil || IsNil(o.Length) {
		return nil, false
	}
	return o.Length, true
}

// HasLength returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInnerParcelDimension) HasLength() bool {
	if o != nil && !IsNil(o.Length) {
		return true
	}

	return false
}

// SetLength gets a reference to the given float32 and assigns it to the Length field.
func (o *GetShipmentsForBatchDataInnerParcelDimension) SetLength(v float32) {
	o.Length = &v
}

// GetUnitOfMeasurement returns the UnitOfMeasurement field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInnerParcelDimension) GetUnitOfMeasurement() string {
	if o == nil || IsNil(o.UnitOfMeasurement) {
		var ret string
		return ret
	}
	return *o.UnitOfMeasurement
}

// GetUnitOfMeasurementOk returns a tuple with the UnitOfMeasurement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInnerParcelDimension) GetUnitOfMeasurementOk() (*string, bool) {
	if o == nil || IsNil(o.UnitOfMeasurement) {
		return nil, false
	}
	return o.UnitOfMeasurement, true
}

// HasUnitOfMeasurement returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInnerParcelDimension) HasUnitOfMeasurement() bool {
	if o != nil && !IsNil(o.UnitOfMeasurement) {
		return true
	}

	return false
}

// SetUnitOfMeasurement gets a reference to the given string and assigns it to the UnitOfMeasurement field.
func (o *GetShipmentsForBatchDataInnerParcelDimension) SetUnitOfMeasurement(v string) {
	o.UnitOfMeasurement = &v
}

// GetWidth returns the Width field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInnerParcelDimension) GetWidth() float32 {
	if o == nil || IsNil(o.Width) {
		var ret float32
		return ret
	}
	return *o.Width
}

// GetWidthOk returns a tuple with the Width field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInnerParcelDimension) GetWidthOk() (*float32, bool) {
	if o == nil || IsNil(o.Width) {
		return nil, false
	}
	return o.Width, true
}

// HasWidth returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInnerParcelDimension) HasWidth() bool {
	if o != nil && !IsNil(o.Width) {
		return true
	}

	return false
}

// SetWidth gets a reference to the given float32 and assigns it to the Width field.
func (o *GetShipmentsForBatchDataInnerParcelDimension) SetWidth(v float32) {
	o.Width = &v
}

func (o GetShipmentsForBatchDataInnerParcelDimension) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetShipmentsForBatchDataInnerParcelDimension) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Height) {
		toSerialize["height"] = o.Height
	}
	if !IsNil(o.Length) {
		toSerialize["length"] = o.Length
	}
	if !IsNil(o.UnitOfMeasurement) {
		toSerialize["unitOfMeasurement"] = o.UnitOfMeasurement
	}
	if !IsNil(o.Width) {
		toSerialize["width"] = o.Width
	}
	return toSerialize, nil
}

type NullableGetShipmentsForBatchDataInnerParcelDimension struct {
	value *GetShipmentsForBatchDataInnerParcelDimension
	isSet bool
}

func (v NullableGetShipmentsForBatchDataInnerParcelDimension) Get() *GetShipmentsForBatchDataInnerParcelDimension {
	return v.value
}

func (v *NullableGetShipmentsForBatchDataInnerParcelDimension) Set(val *GetShipmentsForBatchDataInnerParcelDimension) {
	v.value = val
	v.isSet = true
}

func (v NullableGetShipmentsForBatchDataInnerParcelDimension) IsSet() bool {
	return v.isSet
}

func (v *NullableGetShipmentsForBatchDataInnerParcelDimension) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetShipmentsForBatchDataInnerParcelDimension(val *GetShipmentsForBatchDataInnerParcelDimension) *NullableGetShipmentsForBatchDataInnerParcelDimension {
	return &NullableGetShipmentsForBatchDataInnerParcelDimension{value: val, isSet: true}
}

func (v NullableGetShipmentsForBatchDataInnerParcelDimension) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetShipmentsForBatchDataInnerParcelDimension) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


