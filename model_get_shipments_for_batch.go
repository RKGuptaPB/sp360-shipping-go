/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the GetShipmentsForBatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetShipmentsForBatch{}

// GetShipmentsForBatch struct for GetShipmentsForBatch
type GetShipmentsForBatch struct {
	// It displays all the shipment details based on the paramter selected in request
	Data []GetShipmentsForBatchDataInner `json:"data,omitempty"`
	PageInfo *GetShipmentsForBatchPageInfo `json:"pageInfo,omitempty"`
}

// NewGetShipmentsForBatch instantiates a new GetShipmentsForBatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetShipmentsForBatch() *GetShipmentsForBatch {
	this := GetShipmentsForBatch{}
	return &this
}

// NewGetShipmentsForBatchWithDefaults instantiates a new GetShipmentsForBatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetShipmentsForBatchWithDefaults() *GetShipmentsForBatch {
	this := GetShipmentsForBatch{}
	return &this
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetShipmentsForBatch) GetData() []GetShipmentsForBatchDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []GetShipmentsForBatchDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatch) GetDataOk() ([]GetShipmentsForBatchDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetShipmentsForBatch) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []GetShipmentsForBatchDataInner and assigns it to the Data field.
func (o *GetShipmentsForBatch) SetData(v []GetShipmentsForBatchDataInner) {
	o.Data = v
}

// GetPageInfo returns the PageInfo field value if set, zero value otherwise.
func (o *GetShipmentsForBatch) GetPageInfo() GetShipmentsForBatchPageInfo {
	if o == nil || IsNil(o.PageInfo) {
		var ret GetShipmentsForBatchPageInfo
		return ret
	}
	return *o.PageInfo
}

// GetPageInfoOk returns a tuple with the PageInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatch) GetPageInfoOk() (*GetShipmentsForBatchPageInfo, bool) {
	if o == nil || IsNil(o.PageInfo) {
		return nil, false
	}
	return o.PageInfo, true
}

// HasPageInfo returns a boolean if a field has been set.
func (o *GetShipmentsForBatch) HasPageInfo() bool {
	if o != nil && !IsNil(o.PageInfo) {
		return true
	}

	return false
}

// SetPageInfo gets a reference to the given GetShipmentsForBatchPageInfo and assigns it to the PageInfo field.
func (o *GetShipmentsForBatch) SetPageInfo(v GetShipmentsForBatchPageInfo) {
	o.PageInfo = &v
}

func (o GetShipmentsForBatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetShipmentsForBatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.PageInfo) {
		toSerialize["pageInfo"] = o.PageInfo
	}
	return toSerialize, nil
}

type NullableGetShipmentsForBatch struct {
	value *GetShipmentsForBatch
	isSet bool
}

func (v NullableGetShipmentsForBatch) Get() *GetShipmentsForBatch {
	return v.value
}

func (v *NullableGetShipmentsForBatch) Set(val *GetShipmentsForBatch) {
	v.value = val
	v.isSet = true
}

func (v NullableGetShipmentsForBatch) IsSet() bool {
	return v.isSet
}

func (v *NullableGetShipmentsForBatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetShipmentsForBatch(val *GetShipmentsForBatch) *NullableGetShipmentsForBatch {
	return &NullableGetShipmentsForBatch{value: val, isSet: true}
}

func (v NullableGetShipmentsForBatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetShipmentsForBatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


