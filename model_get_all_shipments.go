/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the GetAllShipments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAllShipments{}

// GetAllShipments struct for GetAllShipments
type GetAllShipments struct {
	PageInfo *GetAllPickupsPageInfo `json:"pageInfo,omitempty"`
	Data []GetAllShipmentsDataInner `json:"data,omitempty"`
}

// NewGetAllShipments instantiates a new GetAllShipments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAllShipments() *GetAllShipments {
	this := GetAllShipments{}
	return &this
}

// NewGetAllShipmentsWithDefaults instantiates a new GetAllShipments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAllShipmentsWithDefaults() *GetAllShipments {
	this := GetAllShipments{}
	return &this
}

// GetPageInfo returns the PageInfo field value if set, zero value otherwise.
func (o *GetAllShipments) GetPageInfo() GetAllPickupsPageInfo {
	if o == nil || IsNil(o.PageInfo) {
		var ret GetAllPickupsPageInfo
		return ret
	}
	return *o.PageInfo
}

// GetPageInfoOk returns a tuple with the PageInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllShipments) GetPageInfoOk() (*GetAllPickupsPageInfo, bool) {
	if o == nil || IsNil(o.PageInfo) {
		return nil, false
	}
	return o.PageInfo, true
}

// HasPageInfo returns a boolean if a field has been set.
func (o *GetAllShipments) HasPageInfo() bool {
	if o != nil && !IsNil(o.PageInfo) {
		return true
	}

	return false
}

// SetPageInfo gets a reference to the given GetAllPickupsPageInfo and assigns it to the PageInfo field.
func (o *GetAllShipments) SetPageInfo(v GetAllPickupsPageInfo) {
	o.PageInfo = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *GetAllShipments) GetData() []GetAllShipmentsDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []GetAllShipmentsDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAllShipments) GetDataOk() ([]GetAllShipmentsDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *GetAllShipments) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []GetAllShipmentsDataInner and assigns it to the Data field.
func (o *GetAllShipments) SetData(v []GetAllShipmentsDataInner) {
	o.Data = v
}

func (o GetAllShipments) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAllShipments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PageInfo) {
		toSerialize["pageInfo"] = o.PageInfo
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableGetAllShipments struct {
	value *GetAllShipments
	isSet bool
}

func (v NullableGetAllShipments) Get() *GetAllShipments {
	return v.value
}

func (v *NullableGetAllShipments) Set(val *GetAllShipments) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAllShipments) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAllShipments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAllShipments(val *GetAllShipments) *NullableGetAllShipments {
	return &NullableGetAllShipments{value: val, isSet: true}
}

func (v NullableGetAllShipments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAllShipments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


