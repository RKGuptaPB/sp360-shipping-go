/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the MultipieceShipmentRequestMultiPieceParcelsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipieceShipmentRequestMultiPieceParcelsInner{}

// MultipieceShipmentRequestMultiPieceParcelsInner struct for MultipieceShipmentRequestMultiPieceParcelsInner
type MultipieceShipmentRequestMultiPieceParcelsInner struct {
	// Description
	ParcelType *string `json:"parcelType,omitempty"`
	Parcel *MultipieceShipmentRequestMultiPieceParcelsInnerParcel `json:"parcel,omitempty"`
}

// NewMultipieceShipmentRequestMultiPieceParcelsInner instantiates a new MultipieceShipmentRequestMultiPieceParcelsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipieceShipmentRequestMultiPieceParcelsInner() *MultipieceShipmentRequestMultiPieceParcelsInner {
	this := MultipieceShipmentRequestMultiPieceParcelsInner{}
	return &this
}

// NewMultipieceShipmentRequestMultiPieceParcelsInnerWithDefaults instantiates a new MultipieceShipmentRequestMultiPieceParcelsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipieceShipmentRequestMultiPieceParcelsInnerWithDefaults() *MultipieceShipmentRequestMultiPieceParcelsInner {
	this := MultipieceShipmentRequestMultiPieceParcelsInner{}
	return &this
}

// GetParcelType returns the ParcelType field value if set, zero value otherwise.
func (o *MultipieceShipmentRequestMultiPieceParcelsInner) GetParcelType() string {
	if o == nil || IsNil(o.ParcelType) {
		var ret string
		return ret
	}
	return *o.ParcelType
}

// GetParcelTypeOk returns a tuple with the ParcelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentRequestMultiPieceParcelsInner) GetParcelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelType) {
		return nil, false
	}
	return o.ParcelType, true
}

// HasParcelType returns a boolean if a field has been set.
func (o *MultipieceShipmentRequestMultiPieceParcelsInner) HasParcelType() bool {
	if o != nil && !IsNil(o.ParcelType) {
		return true
	}

	return false
}

// SetParcelType gets a reference to the given string and assigns it to the ParcelType field.
func (o *MultipieceShipmentRequestMultiPieceParcelsInner) SetParcelType(v string) {
	o.ParcelType = &v
}

// GetParcel returns the Parcel field value if set, zero value otherwise.
func (o *MultipieceShipmentRequestMultiPieceParcelsInner) GetParcel() MultipieceShipmentRequestMultiPieceParcelsInnerParcel {
	if o == nil || IsNil(o.Parcel) {
		var ret MultipieceShipmentRequestMultiPieceParcelsInnerParcel
		return ret
	}
	return *o.Parcel
}

// GetParcelOk returns a tuple with the Parcel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentRequestMultiPieceParcelsInner) GetParcelOk() (*MultipieceShipmentRequestMultiPieceParcelsInnerParcel, bool) {
	if o == nil || IsNil(o.Parcel) {
		return nil, false
	}
	return o.Parcel, true
}

// HasParcel returns a boolean if a field has been set.
func (o *MultipieceShipmentRequestMultiPieceParcelsInner) HasParcel() bool {
	if o != nil && !IsNil(o.Parcel) {
		return true
	}

	return false
}

// SetParcel gets a reference to the given MultipieceShipmentRequestMultiPieceParcelsInnerParcel and assigns it to the Parcel field.
func (o *MultipieceShipmentRequestMultiPieceParcelsInner) SetParcel(v MultipieceShipmentRequestMultiPieceParcelsInnerParcel) {
	o.Parcel = &v
}

func (o MultipieceShipmentRequestMultiPieceParcelsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipieceShipmentRequestMultiPieceParcelsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParcelType) {
		toSerialize["parcelType"] = o.ParcelType
	}
	if !IsNil(o.Parcel) {
		toSerialize["parcel"] = o.Parcel
	}
	return toSerialize, nil
}

type NullableMultipieceShipmentRequestMultiPieceParcelsInner struct {
	value *MultipieceShipmentRequestMultiPieceParcelsInner
	isSet bool
}

func (v NullableMultipieceShipmentRequestMultiPieceParcelsInner) Get() *MultipieceShipmentRequestMultiPieceParcelsInner {
	return v.value
}

func (v *NullableMultipieceShipmentRequestMultiPieceParcelsInner) Set(val *MultipieceShipmentRequestMultiPieceParcelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipieceShipmentRequestMultiPieceParcelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipieceShipmentRequestMultiPieceParcelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipieceShipmentRequestMultiPieceParcelsInner(val *MultipieceShipmentRequestMultiPieceParcelsInner) *NullableMultipieceShipmentRequestMultiPieceParcelsInner {
	return &NullableMultipieceShipmentRequestMultiPieceParcelsInner{value: val, isSet: true}
}

func (v NullableMultipieceShipmentRequestMultiPieceParcelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipieceShipmentRequestMultiPieceParcelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


