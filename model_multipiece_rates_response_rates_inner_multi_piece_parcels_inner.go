/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the MultipieceRatesResponseRatesInnerMultiPieceParcelsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipieceRatesResponseRatesInnerMultiPieceParcelsInner{}

// MultipieceRatesResponseRatesInnerMultiPieceParcelsInner description
type MultipieceRatesResponseRatesInnerMultiPieceParcelsInner struct {
	// description
	ParcelType *string `json:"parcelType,omitempty"`
	Parcel *MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcel `json:"parcel,omitempty"`
	ParcelRate *MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcelRate `json:"parcelRate,omitempty"`
}

// NewMultipieceRatesResponseRatesInnerMultiPieceParcelsInner instantiates a new MultipieceRatesResponseRatesInnerMultiPieceParcelsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipieceRatesResponseRatesInnerMultiPieceParcelsInner() *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner {
	this := MultipieceRatesResponseRatesInnerMultiPieceParcelsInner{}
	return &this
}

// NewMultipieceRatesResponseRatesInnerMultiPieceParcelsInnerWithDefaults instantiates a new MultipieceRatesResponseRatesInnerMultiPieceParcelsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipieceRatesResponseRatesInnerMultiPieceParcelsInnerWithDefaults() *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner {
	this := MultipieceRatesResponseRatesInnerMultiPieceParcelsInner{}
	return &this
}

// GetParcelType returns the ParcelType field value if set, zero value otherwise.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) GetParcelType() string {
	if o == nil || IsNil(o.ParcelType) {
		var ret string
		return ret
	}
	return *o.ParcelType
}

// GetParcelTypeOk returns a tuple with the ParcelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) GetParcelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelType) {
		return nil, false
	}
	return o.ParcelType, true
}

// HasParcelType returns a boolean if a field has been set.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) HasParcelType() bool {
	if o != nil && !IsNil(o.ParcelType) {
		return true
	}

	return false
}

// SetParcelType gets a reference to the given string and assigns it to the ParcelType field.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) SetParcelType(v string) {
	o.ParcelType = &v
}

// GetParcel returns the Parcel field value if set, zero value otherwise.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) GetParcel() MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcel {
	if o == nil || IsNil(o.Parcel) {
		var ret MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcel
		return ret
	}
	return *o.Parcel
}

// GetParcelOk returns a tuple with the Parcel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) GetParcelOk() (*MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcel, bool) {
	if o == nil || IsNil(o.Parcel) {
		return nil, false
	}
	return o.Parcel, true
}

// HasParcel returns a boolean if a field has been set.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) HasParcel() bool {
	if o != nil && !IsNil(o.Parcel) {
		return true
	}

	return false
}

// SetParcel gets a reference to the given MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcel and assigns it to the Parcel field.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) SetParcel(v MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcel) {
	o.Parcel = &v
}

// GetParcelRate returns the ParcelRate field value if set, zero value otherwise.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) GetParcelRate() MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcelRate {
	if o == nil || IsNil(o.ParcelRate) {
		var ret MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcelRate
		return ret
	}
	return *o.ParcelRate
}

// GetParcelRateOk returns a tuple with the ParcelRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) GetParcelRateOk() (*MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcelRate, bool) {
	if o == nil || IsNil(o.ParcelRate) {
		return nil, false
	}
	return o.ParcelRate, true
}

// HasParcelRate returns a boolean if a field has been set.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) HasParcelRate() bool {
	if o != nil && !IsNil(o.ParcelRate) {
		return true
	}

	return false
}

// SetParcelRate gets a reference to the given MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcelRate and assigns it to the ParcelRate field.
func (o *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) SetParcelRate(v MultipieceRatesResponseRatesInnerMultiPieceParcelsInnerParcelRate) {
	o.ParcelRate = &v
}

func (o MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParcelType) {
		toSerialize["parcelType"] = o.ParcelType
	}
	if !IsNil(o.Parcel) {
		toSerialize["parcel"] = o.Parcel
	}
	if !IsNil(o.ParcelRate) {
		toSerialize["parcelRate"] = o.ParcelRate
	}
	return toSerialize, nil
}

type NullableMultipieceRatesResponseRatesInnerMultiPieceParcelsInner struct {
	value *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner
	isSet bool
}

func (v NullableMultipieceRatesResponseRatesInnerMultiPieceParcelsInner) Get() *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner {
	return v.value
}

func (v *NullableMultipieceRatesResponseRatesInnerMultiPieceParcelsInner) Set(val *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipieceRatesResponseRatesInnerMultiPieceParcelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipieceRatesResponseRatesInnerMultiPieceParcelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipieceRatesResponseRatesInnerMultiPieceParcelsInner(val *MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) *NullableMultipieceRatesResponseRatesInnerMultiPieceParcelsInner {
	return &NullableMultipieceRatesResponseRatesInnerMultiPieceParcelsInner{value: val, isSet: true}
}

func (v NullableMultipieceRatesResponseRatesInnerMultiPieceParcelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipieceRatesResponseRatesInnerMultiPieceParcelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


