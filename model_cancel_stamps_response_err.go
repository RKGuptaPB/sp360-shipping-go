/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the CancelStampsResponseERR type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelStampsResponseERR{}

// CancelStampsResponseERR struct for CancelStampsResponseERR
type CancelStampsResponseERR struct {
	// Refund form with postage details
	RefundFormUrl *string `json:"refundFormUrl,omitempty"`
}

// NewCancelStampsResponseERR instantiates a new CancelStampsResponseERR object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelStampsResponseERR() *CancelStampsResponseERR {
	this := CancelStampsResponseERR{}
	return &this
}

// NewCancelStampsResponseERRWithDefaults instantiates a new CancelStampsResponseERR object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelStampsResponseERRWithDefaults() *CancelStampsResponseERR {
	this := CancelStampsResponseERR{}
	return &this
}

// GetRefundFormUrl returns the RefundFormUrl field value if set, zero value otherwise.
func (o *CancelStampsResponseERR) GetRefundFormUrl() string {
	if o == nil || IsNil(o.RefundFormUrl) {
		var ret string
		return ret
	}
	return *o.RefundFormUrl
}

// GetRefundFormUrlOk returns a tuple with the RefundFormUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelStampsResponseERR) GetRefundFormUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RefundFormUrl) {
		return nil, false
	}
	return o.RefundFormUrl, true
}

// HasRefundFormUrl returns a boolean if a field has been set.
func (o *CancelStampsResponseERR) HasRefundFormUrl() bool {
	if o != nil && !IsNil(o.RefundFormUrl) {
		return true
	}

	return false
}

// SetRefundFormUrl gets a reference to the given string and assigns it to the RefundFormUrl field.
func (o *CancelStampsResponseERR) SetRefundFormUrl(v string) {
	o.RefundFormUrl = &v
}

func (o CancelStampsResponseERR) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelStampsResponseERR) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RefundFormUrl) {
		toSerialize["refundFormUrl"] = o.RefundFormUrl
	}
	return toSerialize, nil
}

type NullableCancelStampsResponseERR struct {
	value *CancelStampsResponseERR
	isSet bool
}

func (v NullableCancelStampsResponseERR) Get() *CancelStampsResponseERR {
	return v.value
}

func (v *NullableCancelStampsResponseERR) Set(val *CancelStampsResponseERR) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelStampsResponseERR) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelStampsResponseERR) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelStampsResponseERR(val *CancelStampsResponseERR) *NullableCancelStampsResponseERR {
	return &NullableCancelStampsResponseERR{value: val, isSet: true}
}

func (v NullableCancelStampsResponseERR) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelStampsResponseERR) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


