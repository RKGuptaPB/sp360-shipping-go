/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the AddressSuggestResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressSuggestResponse{}

// AddressSuggestResponse struct for AddressSuggestResponse
type AddressSuggestResponse struct {
	Address *AddressSuggestResponseAddress `json:"address,omitempty"`
	Suggestions *AddressSuggestResponseSuggestions `json:"suggestions,omitempty"`
}

// NewAddressSuggestResponse instantiates a new AddressSuggestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressSuggestResponse() *AddressSuggestResponse {
	this := AddressSuggestResponse{}
	return &this
}

// NewAddressSuggestResponseWithDefaults instantiates a new AddressSuggestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressSuggestResponseWithDefaults() *AddressSuggestResponse {
	this := AddressSuggestResponse{}
	return &this
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *AddressSuggestResponse) GetAddress() AddressSuggestResponseAddress {
	if o == nil || IsNil(o.Address) {
		var ret AddressSuggestResponseAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressSuggestResponse) GetAddressOk() (*AddressSuggestResponseAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *AddressSuggestResponse) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given AddressSuggestResponseAddress and assigns it to the Address field.
func (o *AddressSuggestResponse) SetAddress(v AddressSuggestResponseAddress) {
	o.Address = &v
}

// GetSuggestions returns the Suggestions field value if set, zero value otherwise.
func (o *AddressSuggestResponse) GetSuggestions() AddressSuggestResponseSuggestions {
	if o == nil || IsNil(o.Suggestions) {
		var ret AddressSuggestResponseSuggestions
		return ret
	}
	return *o.Suggestions
}

// GetSuggestionsOk returns a tuple with the Suggestions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddressSuggestResponse) GetSuggestionsOk() (*AddressSuggestResponseSuggestions, bool) {
	if o == nil || IsNil(o.Suggestions) {
		return nil, false
	}
	return o.Suggestions, true
}

// HasSuggestions returns a boolean if a field has been set.
func (o *AddressSuggestResponse) HasSuggestions() bool {
	if o != nil && !IsNil(o.Suggestions) {
		return true
	}

	return false
}

// SetSuggestions gets a reference to the given AddressSuggestResponseSuggestions and assigns it to the Suggestions field.
func (o *AddressSuggestResponse) SetSuggestions(v AddressSuggestResponseSuggestions) {
	o.Suggestions = &v
}

func (o AddressSuggestResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressSuggestResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	if !IsNil(o.Suggestions) {
		toSerialize["suggestions"] = o.Suggestions
	}
	return toSerialize, nil
}

type NullableAddressSuggestResponse struct {
	value *AddressSuggestResponse
	isSet bool
}

func (v NullableAddressSuggestResponse) Get() *AddressSuggestResponse {
	return v.value
}

func (v *NullableAddressSuggestResponse) Set(val *AddressSuggestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressSuggestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressSuggestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressSuggestResponse(val *AddressSuggestResponse) *NullableAddressSuggestResponse {
	return &NullableAddressSuggestResponse{value: val, isSet: true}
}

func (v NullableAddressSuggestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressSuggestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


