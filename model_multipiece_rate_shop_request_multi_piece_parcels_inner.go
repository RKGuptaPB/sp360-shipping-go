/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the MultipieceRateShopRequestMultiPieceParcelsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipieceRateShopRequestMultiPieceParcelsInner{}

// MultipieceRateShopRequestMultiPieceParcelsInner description
type MultipieceRateShopRequestMultiPieceParcelsInner struct {
	// description
	ParcelType *string `json:"parcelType,omitempty"`
	Parcel *MultipieceRateShopRequestMultiPieceParcelsInnerParcel `json:"parcel,omitempty"`
}

// NewMultipieceRateShopRequestMultiPieceParcelsInner instantiates a new MultipieceRateShopRequestMultiPieceParcelsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipieceRateShopRequestMultiPieceParcelsInner() *MultipieceRateShopRequestMultiPieceParcelsInner {
	this := MultipieceRateShopRequestMultiPieceParcelsInner{}
	return &this
}

// NewMultipieceRateShopRequestMultiPieceParcelsInnerWithDefaults instantiates a new MultipieceRateShopRequestMultiPieceParcelsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipieceRateShopRequestMultiPieceParcelsInnerWithDefaults() *MultipieceRateShopRequestMultiPieceParcelsInner {
	this := MultipieceRateShopRequestMultiPieceParcelsInner{}
	return &this
}

// GetParcelType returns the ParcelType field value if set, zero value otherwise.
func (o *MultipieceRateShopRequestMultiPieceParcelsInner) GetParcelType() string {
	if o == nil || IsNil(o.ParcelType) {
		var ret string
		return ret
	}
	return *o.ParcelType
}

// GetParcelTypeOk returns a tuple with the ParcelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRateShopRequestMultiPieceParcelsInner) GetParcelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelType) {
		return nil, false
	}
	return o.ParcelType, true
}

// HasParcelType returns a boolean if a field has been set.
func (o *MultipieceRateShopRequestMultiPieceParcelsInner) HasParcelType() bool {
	if o != nil && !IsNil(o.ParcelType) {
		return true
	}

	return false
}

// SetParcelType gets a reference to the given string and assigns it to the ParcelType field.
func (o *MultipieceRateShopRequestMultiPieceParcelsInner) SetParcelType(v string) {
	o.ParcelType = &v
}

// GetParcel returns the Parcel field value if set, zero value otherwise.
func (o *MultipieceRateShopRequestMultiPieceParcelsInner) GetParcel() MultipieceRateShopRequestMultiPieceParcelsInnerParcel {
	if o == nil || IsNil(o.Parcel) {
		var ret MultipieceRateShopRequestMultiPieceParcelsInnerParcel
		return ret
	}
	return *o.Parcel
}

// GetParcelOk returns a tuple with the Parcel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRateShopRequestMultiPieceParcelsInner) GetParcelOk() (*MultipieceRateShopRequestMultiPieceParcelsInnerParcel, bool) {
	if o == nil || IsNil(o.Parcel) {
		return nil, false
	}
	return o.Parcel, true
}

// HasParcel returns a boolean if a field has been set.
func (o *MultipieceRateShopRequestMultiPieceParcelsInner) HasParcel() bool {
	if o != nil && !IsNil(o.Parcel) {
		return true
	}

	return false
}

// SetParcel gets a reference to the given MultipieceRateShopRequestMultiPieceParcelsInnerParcel and assigns it to the Parcel field.
func (o *MultipieceRateShopRequestMultiPieceParcelsInner) SetParcel(v MultipieceRateShopRequestMultiPieceParcelsInnerParcel) {
	o.Parcel = &v
}

func (o MultipieceRateShopRequestMultiPieceParcelsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipieceRateShopRequestMultiPieceParcelsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParcelType) {
		toSerialize["parcelType"] = o.ParcelType
	}
	if !IsNil(o.Parcel) {
		toSerialize["parcel"] = o.Parcel
	}
	return toSerialize, nil
}

type NullableMultipieceRateShopRequestMultiPieceParcelsInner struct {
	value *MultipieceRateShopRequestMultiPieceParcelsInner
	isSet bool
}

func (v NullableMultipieceRateShopRequestMultiPieceParcelsInner) Get() *MultipieceRateShopRequestMultiPieceParcelsInner {
	return v.value
}

func (v *NullableMultipieceRateShopRequestMultiPieceParcelsInner) Set(val *MultipieceRateShopRequestMultiPieceParcelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipieceRateShopRequestMultiPieceParcelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipieceRateShopRequestMultiPieceParcelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipieceRateShopRequestMultiPieceParcelsInner(val *MultipieceRateShopRequestMultiPieceParcelsInner) *NullableMultipieceRateShopRequestMultiPieceParcelsInner {
	return &NullableMultipieceRateShopRequestMultiPieceParcelsInner{value: val, isSet: true}
}

func (v NullableMultipieceRateShopRequestMultiPieceParcelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipieceRateShopRequestMultiPieceParcelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


