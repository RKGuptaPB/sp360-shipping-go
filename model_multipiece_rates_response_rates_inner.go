/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the MultipieceRatesResponseRatesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipieceRatesResponseRatesInner{}

// MultipieceRatesResponseRatesInner description
type MultipieceRatesResponseRatesInner struct {
	// description
	TotalCarrierCharge *float32 `json:"totalCarrierCharge,omitempty"`
	// description
	Carrier *string `json:"carrier,omitempty"`
	// description
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// description
	RateTypeId *string `json:"rateTypeId,omitempty"`
	// description
	ServiceId *string `json:"serviceId,omitempty"`
	// description
	MultiPieceParcels []MultipieceRatesResponseRatesInnerMultiPieceParcelsInner `json:"multiPieceParcels,omitempty"`
	// description
	Surcharges []MultipieceRatesResponseRatesInnerSurchargesInner `json:"surcharges,omitempty"`
}

// NewMultipieceRatesResponseRatesInner instantiates a new MultipieceRatesResponseRatesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipieceRatesResponseRatesInner() *MultipieceRatesResponseRatesInner {
	this := MultipieceRatesResponseRatesInner{}
	return &this
}

// NewMultipieceRatesResponseRatesInnerWithDefaults instantiates a new MultipieceRatesResponseRatesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipieceRatesResponseRatesInnerWithDefaults() *MultipieceRatesResponseRatesInner {
	this := MultipieceRatesResponseRatesInner{}
	return &this
}

// GetTotalCarrierCharge returns the TotalCarrierCharge field value if set, zero value otherwise.
func (o *MultipieceRatesResponseRatesInner) GetTotalCarrierCharge() float32 {
	if o == nil || IsNil(o.TotalCarrierCharge) {
		var ret float32
		return ret
	}
	return *o.TotalCarrierCharge
}

// GetTotalCarrierChargeOk returns a tuple with the TotalCarrierCharge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponseRatesInner) GetTotalCarrierChargeOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalCarrierCharge) {
		return nil, false
	}
	return o.TotalCarrierCharge, true
}

// HasTotalCarrierCharge returns a boolean if a field has been set.
func (o *MultipieceRatesResponseRatesInner) HasTotalCarrierCharge() bool {
	if o != nil && !IsNil(o.TotalCarrierCharge) {
		return true
	}

	return false
}

// SetTotalCarrierCharge gets a reference to the given float32 and assigns it to the TotalCarrierCharge field.
func (o *MultipieceRatesResponseRatesInner) SetTotalCarrierCharge(v float32) {
	o.TotalCarrierCharge = &v
}

// GetCarrier returns the Carrier field value if set, zero value otherwise.
func (o *MultipieceRatesResponseRatesInner) GetCarrier() string {
	if o == nil || IsNil(o.Carrier) {
		var ret string
		return ret
	}
	return *o.Carrier
}

// GetCarrierOk returns a tuple with the Carrier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponseRatesInner) GetCarrierOk() (*string, bool) {
	if o == nil || IsNil(o.Carrier) {
		return nil, false
	}
	return o.Carrier, true
}

// HasCarrier returns a boolean if a field has been set.
func (o *MultipieceRatesResponseRatesInner) HasCarrier() bool {
	if o != nil && !IsNil(o.Carrier) {
		return true
	}

	return false
}

// SetCarrier gets a reference to the given string and assigns it to the Carrier field.
func (o *MultipieceRatesResponseRatesInner) SetCarrier(v string) {
	o.Carrier = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *MultipieceRatesResponseRatesInner) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponseRatesInner) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *MultipieceRatesResponseRatesInner) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *MultipieceRatesResponseRatesInner) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetRateTypeId returns the RateTypeId field value if set, zero value otherwise.
func (o *MultipieceRatesResponseRatesInner) GetRateTypeId() string {
	if o == nil || IsNil(o.RateTypeId) {
		var ret string
		return ret
	}
	return *o.RateTypeId
}

// GetRateTypeIdOk returns a tuple with the RateTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponseRatesInner) GetRateTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.RateTypeId) {
		return nil, false
	}
	return o.RateTypeId, true
}

// HasRateTypeId returns a boolean if a field has been set.
func (o *MultipieceRatesResponseRatesInner) HasRateTypeId() bool {
	if o != nil && !IsNil(o.RateTypeId) {
		return true
	}

	return false
}

// SetRateTypeId gets a reference to the given string and assigns it to the RateTypeId field.
func (o *MultipieceRatesResponseRatesInner) SetRateTypeId(v string) {
	o.RateTypeId = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *MultipieceRatesResponseRatesInner) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponseRatesInner) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *MultipieceRatesResponseRatesInner) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *MultipieceRatesResponseRatesInner) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetMultiPieceParcels returns the MultiPieceParcels field value if set, zero value otherwise.
func (o *MultipieceRatesResponseRatesInner) GetMultiPieceParcels() []MultipieceRatesResponseRatesInnerMultiPieceParcelsInner {
	if o == nil || IsNil(o.MultiPieceParcels) {
		var ret []MultipieceRatesResponseRatesInnerMultiPieceParcelsInner
		return ret
	}
	return o.MultiPieceParcels
}

// GetMultiPieceParcelsOk returns a tuple with the MultiPieceParcels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponseRatesInner) GetMultiPieceParcelsOk() ([]MultipieceRatesResponseRatesInnerMultiPieceParcelsInner, bool) {
	if o == nil || IsNil(o.MultiPieceParcels) {
		return nil, false
	}
	return o.MultiPieceParcels, true
}

// HasMultiPieceParcels returns a boolean if a field has been set.
func (o *MultipieceRatesResponseRatesInner) HasMultiPieceParcels() bool {
	if o != nil && !IsNil(o.MultiPieceParcels) {
		return true
	}

	return false
}

// SetMultiPieceParcels gets a reference to the given []MultipieceRatesResponseRatesInnerMultiPieceParcelsInner and assigns it to the MultiPieceParcels field.
func (o *MultipieceRatesResponseRatesInner) SetMultiPieceParcels(v []MultipieceRatesResponseRatesInnerMultiPieceParcelsInner) {
	o.MultiPieceParcels = v
}

// GetSurcharges returns the Surcharges field value if set, zero value otherwise.
func (o *MultipieceRatesResponseRatesInner) GetSurcharges() []MultipieceRatesResponseRatesInnerSurchargesInner {
	if o == nil || IsNil(o.Surcharges) {
		var ret []MultipieceRatesResponseRatesInnerSurchargesInner
		return ret
	}
	return o.Surcharges
}

// GetSurchargesOk returns a tuple with the Surcharges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponseRatesInner) GetSurchargesOk() ([]MultipieceRatesResponseRatesInnerSurchargesInner, bool) {
	if o == nil || IsNil(o.Surcharges) {
		return nil, false
	}
	return o.Surcharges, true
}

// HasSurcharges returns a boolean if a field has been set.
func (o *MultipieceRatesResponseRatesInner) HasSurcharges() bool {
	if o != nil && !IsNil(o.Surcharges) {
		return true
	}

	return false
}

// SetSurcharges gets a reference to the given []MultipieceRatesResponseRatesInnerSurchargesInner and assigns it to the Surcharges field.
func (o *MultipieceRatesResponseRatesInner) SetSurcharges(v []MultipieceRatesResponseRatesInnerSurchargesInner) {
	o.Surcharges = v
}

func (o MultipieceRatesResponseRatesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipieceRatesResponseRatesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TotalCarrierCharge) {
		toSerialize["totalCarrierCharge"] = o.TotalCarrierCharge
	}
	if !IsNil(o.Carrier) {
		toSerialize["carrier"] = o.Carrier
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.RateTypeId) {
		toSerialize["rateTypeId"] = o.RateTypeId
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.MultiPieceParcels) {
		toSerialize["multiPieceParcels"] = o.MultiPieceParcels
	}
	if !IsNil(o.Surcharges) {
		toSerialize["surcharges"] = o.Surcharges
	}
	return toSerialize, nil
}

type NullableMultipieceRatesResponseRatesInner struct {
	value *MultipieceRatesResponseRatesInner
	isSet bool
}

func (v NullableMultipieceRatesResponseRatesInner) Get() *MultipieceRatesResponseRatesInner {
	return v.value
}

func (v *NullableMultipieceRatesResponseRatesInner) Set(val *MultipieceRatesResponseRatesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipieceRatesResponseRatesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipieceRatesResponseRatesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipieceRatesResponseRatesInner(val *MultipieceRatesResponseRatesInner) *NullableMultipieceRatesResponseRatesInner {
	return &NullableMultipieceRatesResponseRatesInner{value: val, isSet: true}
}

func (v NullableMultipieceRatesResponseRatesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipieceRatesResponseRatesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


