/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateManifestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateManifestRequest{}

// CreateManifestRequest struct for CreateManifestRequest
type CreateManifestRequest struct {
	// A unique identifier associated with the specific carrier account, which is used in the Manifest process.
	CarrierAccountId string `json:"carrierAccountId"`
	FromAddress CreateManifestRequestFromAddress `json:"fromAddress"`
	// The date the shipments are to be tendered to the carrier, entered as YYYY-MM-DD.
	SubmissionDate *string `json:"submissionDate,omitempty"`
}

type _CreateManifestRequest CreateManifestRequest

// NewCreateManifestRequest instantiates a new CreateManifestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateManifestRequest(carrierAccountId string, fromAddress CreateManifestRequestFromAddress) *CreateManifestRequest {
	this := CreateManifestRequest{}
	this.CarrierAccountId = carrierAccountId
	this.FromAddress = fromAddress
	return &this
}

// NewCreateManifestRequestWithDefaults instantiates a new CreateManifestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateManifestRequestWithDefaults() *CreateManifestRequest {
	this := CreateManifestRequest{}
	return &this
}

// GetCarrierAccountId returns the CarrierAccountId field value
func (o *CreateManifestRequest) GetCarrierAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CarrierAccountId
}

// GetCarrierAccountIdOk returns a tuple with the CarrierAccountId field value
// and a boolean to check if the value has been set.
func (o *CreateManifestRequest) GetCarrierAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CarrierAccountId, true
}

// SetCarrierAccountId sets field value
func (o *CreateManifestRequest) SetCarrierAccountId(v string) {
	o.CarrierAccountId = v
}

// GetFromAddress returns the FromAddress field value
func (o *CreateManifestRequest) GetFromAddress() CreateManifestRequestFromAddress {
	if o == nil {
		var ret CreateManifestRequestFromAddress
		return ret
	}

	return o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value
// and a boolean to check if the value has been set.
func (o *CreateManifestRequest) GetFromAddressOk() (*CreateManifestRequestFromAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromAddress, true
}

// SetFromAddress sets field value
func (o *CreateManifestRequest) SetFromAddress(v CreateManifestRequestFromAddress) {
	o.FromAddress = v
}

// GetSubmissionDate returns the SubmissionDate field value if set, zero value otherwise.
func (o *CreateManifestRequest) GetSubmissionDate() string {
	if o == nil || IsNil(o.SubmissionDate) {
		var ret string
		return ret
	}
	return *o.SubmissionDate
}

// GetSubmissionDateOk returns a tuple with the SubmissionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateManifestRequest) GetSubmissionDateOk() (*string, bool) {
	if o == nil || IsNil(o.SubmissionDate) {
		return nil, false
	}
	return o.SubmissionDate, true
}

// HasSubmissionDate returns a boolean if a field has been set.
func (o *CreateManifestRequest) HasSubmissionDate() bool {
	if o != nil && !IsNil(o.SubmissionDate) {
		return true
	}

	return false
}

// SetSubmissionDate gets a reference to the given string and assigns it to the SubmissionDate field.
func (o *CreateManifestRequest) SetSubmissionDate(v string) {
	o.SubmissionDate = &v
}

func (o CreateManifestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateManifestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["carrierAccountId"] = o.CarrierAccountId
	toSerialize["fromAddress"] = o.FromAddress
	if !IsNil(o.SubmissionDate) {
		toSerialize["submissionDate"] = o.SubmissionDate
	}
	return toSerialize, nil
}

func (o *CreateManifestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"carrierAccountId",
		"fromAddress",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateManifestRequest := _CreateManifestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateManifestRequest)

	if err != nil {
		return err
	}

	*o = CreateManifestRequest(varCreateManifestRequest)

	return err
}

type NullableCreateManifestRequest struct {
	value *CreateManifestRequest
	isSet bool
}

func (v NullableCreateManifestRequest) Get() *CreateManifestRequest {
	return v.value
}

func (v *NullableCreateManifestRequest) Set(val *CreateManifestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateManifestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateManifestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateManifestRequest(val *CreateManifestRequest) *NullableCreateManifestRequest {
	return &NullableCreateManifestRequest{value: val, isSet: true}
}

func (v NullableCreateManifestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateManifestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


