/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the ErrorsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorsInner{}

// ErrorsInner struct for ErrorsInner
type ErrorsInner struct {
	// Error code(s) that appear due to HTTP  400- Invalid or Bad Request, e.g. validation-error.
	ErrorCode *string `json:"errorCode,omitempty"`
	// The HTTP 400 Bad Request response status code indicates that the server cannot process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).
	ErrorDescription *string `json:"errorDescription,omitempty"`
	// A unique identifier for the error, for example 1101055, 0100008, or 1021126.
	AdditionalCode *string `json:"additionalCode,omitempty"`
	// This is an additional information about the error. This error 'Invalid Request' might appear due to invalid dimension, weight, or serviceid, or if the information is missing.
	AdditionalInfo *string `json:"additionalInfo,omitempty"`
	AdditionalParameters []string `json:"additionalParameters,omitempty"`
}

// NewErrorsInner instantiates a new ErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorsInner() *ErrorsInner {
	this := ErrorsInner{}
	return &this
}

// NewErrorsInnerWithDefaults instantiates a new ErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorsInnerWithDefaults() *ErrorsInner {
	this := ErrorsInner{}
	return &this
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *ErrorsInner) GetErrorCode() string {
	if o == nil || IsNil(o.ErrorCode) {
		var ret string
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorsInner) GetErrorCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *ErrorsInner) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given string and assigns it to the ErrorCode field.
func (o *ErrorsInner) SetErrorCode(v string) {
	o.ErrorCode = &v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *ErrorsInner) GetErrorDescription() string {
	if o == nil || IsNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorsInner) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *ErrorsInner) HasErrorDescription() bool {
	if o != nil && !IsNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *ErrorsInner) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetAdditionalCode returns the AdditionalCode field value if set, zero value otherwise.
func (o *ErrorsInner) GetAdditionalCode() string {
	if o == nil || IsNil(o.AdditionalCode) {
		var ret string
		return ret
	}
	return *o.AdditionalCode
}

// GetAdditionalCodeOk returns a tuple with the AdditionalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorsInner) GetAdditionalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalCode) {
		return nil, false
	}
	return o.AdditionalCode, true
}

// HasAdditionalCode returns a boolean if a field has been set.
func (o *ErrorsInner) HasAdditionalCode() bool {
	if o != nil && !IsNil(o.AdditionalCode) {
		return true
	}

	return false
}

// SetAdditionalCode gets a reference to the given string and assigns it to the AdditionalCode field.
func (o *ErrorsInner) SetAdditionalCode(v string) {
	o.AdditionalCode = &v
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *ErrorsInner) GetAdditionalInfo() string {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret string
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorsInner) GetAdditionalInfoOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *ErrorsInner) HasAdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given string and assigns it to the AdditionalInfo field.
func (o *ErrorsInner) SetAdditionalInfo(v string) {
	o.AdditionalInfo = &v
}

// GetAdditionalParameters returns the AdditionalParameters field value if set, zero value otherwise.
func (o *ErrorsInner) GetAdditionalParameters() []string {
	if o == nil || IsNil(o.AdditionalParameters) {
		var ret []string
		return ret
	}
	return o.AdditionalParameters
}

// GetAdditionalParametersOk returns a tuple with the AdditionalParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorsInner) GetAdditionalParametersOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalParameters) {
		return nil, false
	}
	return o.AdditionalParameters, true
}

// HasAdditionalParameters returns a boolean if a field has been set.
func (o *ErrorsInner) HasAdditionalParameters() bool {
	if o != nil && !IsNil(o.AdditionalParameters) {
		return true
	}

	return false
}

// SetAdditionalParameters gets a reference to the given []string and assigns it to the AdditionalParameters field.
func (o *ErrorsInner) SetAdditionalParameters(v []string) {
	o.AdditionalParameters = v
}

func (o ErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.ErrorDescription) {
		toSerialize["errorDescription"] = o.ErrorDescription
	}
	if !IsNil(o.AdditionalCode) {
		toSerialize["additionalCode"] = o.AdditionalCode
	}
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additionalInfo"] = o.AdditionalInfo
	}
	if !IsNil(o.AdditionalParameters) {
		toSerialize["additionalParameters"] = o.AdditionalParameters
	}
	return toSerialize, nil
}

type NullableErrorsInner struct {
	value *ErrorsInner
	isSet bool
}

func (v NullableErrorsInner) Get() *ErrorsInner {
	return v.value
}

func (v *NullableErrorsInner) Set(val *ErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorsInner(val *ErrorsInner) *NullableErrorsInner {
	return &NullableErrorsInner{value: val, isSet: true}
}

func (v NullableErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


