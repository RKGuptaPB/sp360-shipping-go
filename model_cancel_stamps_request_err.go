/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the CancelStampsRequestERR type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelStampsRequestERR{}

// CancelStampsRequestERR struct for CancelStampsRequestERR
type CancelStampsRequestERR struct {
	// StampIds list for cancel postage.
	StampIds []string `json:"stampIds,omitempty"`
}

// NewCancelStampsRequestERR instantiates a new CancelStampsRequestERR object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelStampsRequestERR() *CancelStampsRequestERR {
	this := CancelStampsRequestERR{}
	return &this
}

// NewCancelStampsRequestERRWithDefaults instantiates a new CancelStampsRequestERR object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelStampsRequestERRWithDefaults() *CancelStampsRequestERR {
	this := CancelStampsRequestERR{}
	return &this
}

// GetStampIds returns the StampIds field value if set, zero value otherwise.
func (o *CancelStampsRequestERR) GetStampIds() []string {
	if o == nil || IsNil(o.StampIds) {
		var ret []string
		return ret
	}
	return o.StampIds
}

// GetStampIdsOk returns a tuple with the StampIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelStampsRequestERR) GetStampIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.StampIds) {
		return nil, false
	}
	return o.StampIds, true
}

// HasStampIds returns a boolean if a field has been set.
func (o *CancelStampsRequestERR) HasStampIds() bool {
	if o != nil && !IsNil(o.StampIds) {
		return true
	}

	return false
}

// SetStampIds gets a reference to the given []string and assigns it to the StampIds field.
func (o *CancelStampsRequestERR) SetStampIds(v []string) {
	o.StampIds = v
}

func (o CancelStampsRequestERR) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelStampsRequestERR) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StampIds) {
		toSerialize["stampIds"] = o.StampIds
	}
	return toSerialize, nil
}

type NullableCancelStampsRequestERR struct {
	value *CancelStampsRequestERR
	isSet bool
}

func (v NullableCancelStampsRequestERR) Get() *CancelStampsRequestERR {
	return v.value
}

func (v *NullableCancelStampsRequestERR) Set(val *CancelStampsRequestERR) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelStampsRequestERR) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelStampsRequestERR) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelStampsRequestERR(val *CancelStampsRequestERR) *NullableCancelStampsRequestERR {
	return &NullableCancelStampsRequestERR{value: val, isSet: true}
}

func (v NullableCancelStampsRequestERR) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelStampsRequestERR) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


