/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the InternationalShipmentResponseCustomsCustomsInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternationalShipmentResponseCustomsCustomsInfo{}

// InternationalShipmentResponseCustomsCustomsInfo struct for InternationalShipmentResponseCustomsCustomsInfo
type InternationalShipmentResponseCustomsCustomsInfo struct {
	// A number provided by the Automated Export System (AES). This is required if the item is valued at more than $2,500 USD per Schedule B export codes.
	EELPFC *string `json:"EELPFC,omitempty"`
	// The certificate number associated with the commodity.
	CertificateNumber *string `json:"certificateNumber,omitempty"`
	// Free-form comments regarding the exported shipment.
	Comments *string `json:"comments,omitempty"`
	// The currency used for declared value. Use three uppercase letters, per ISO 4217.
	CurrencyCode *string `json:"currencyCode,omitempty"`
	// Item value in mentioned currencyCode.
	CustomsDeclaredValue *float32 `json:"customsDeclaredValue,omitempty"`
	// Free-form reference information provided by the requestor of the shipment. Depending on the carrier this information may or may not be rendered on the customs documents.
	FromCustomsReference *string `json:"fromCustomsReference,omitempty"`
	// A reference number used by the importer, such as a VAT number, PO number, or insured number.
	ImporterCustomsReference *string `json:"importerCustomsReference,omitempty"`
	// The commercial invoice number assigned by the exporter.
	InvoiceNumber *string `json:"invoiceNumber,omitempty"`
	// The export license number associated with the commodity.
	LicenseNumber *string `json:"licenseNumber,omitempty"`
	// The reason the commodity is being exported.
	ReasonForExport *string `json:"reasonForExport,omitempty"`
	// When an international parcel is insured, the insured value must be expressed in Special Drawing Rights values.
	SdrValue *float32 `json:"sdrValue,omitempty"`
}

// NewInternationalShipmentResponseCustomsCustomsInfo instantiates a new InternationalShipmentResponseCustomsCustomsInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternationalShipmentResponseCustomsCustomsInfo() *InternationalShipmentResponseCustomsCustomsInfo {
	this := InternationalShipmentResponseCustomsCustomsInfo{}
	return &this
}

// NewInternationalShipmentResponseCustomsCustomsInfoWithDefaults instantiates a new InternationalShipmentResponseCustomsCustomsInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternationalShipmentResponseCustomsCustomsInfoWithDefaults() *InternationalShipmentResponseCustomsCustomsInfo {
	this := InternationalShipmentResponseCustomsCustomsInfo{}
	return &this
}

// GetEELPFC returns the EELPFC field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetEELPFC() string {
	if o == nil || IsNil(o.EELPFC) {
		var ret string
		return ret
	}
	return *o.EELPFC
}

// GetEELPFCOk returns a tuple with the EELPFC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetEELPFCOk() (*string, bool) {
	if o == nil || IsNil(o.EELPFC) {
		return nil, false
	}
	return o.EELPFC, true
}

// HasEELPFC returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) HasEELPFC() bool {
	if o != nil && !IsNil(o.EELPFC) {
		return true
	}

	return false
}

// SetEELPFC gets a reference to the given string and assigns it to the EELPFC field.
func (o *InternationalShipmentResponseCustomsCustomsInfo) SetEELPFC(v string) {
	o.EELPFC = &v
}

// GetCertificateNumber returns the CertificateNumber field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetCertificateNumber() string {
	if o == nil || IsNil(o.CertificateNumber) {
		var ret string
		return ret
	}
	return *o.CertificateNumber
}

// GetCertificateNumberOk returns a tuple with the CertificateNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetCertificateNumberOk() (*string, bool) {
	if o == nil || IsNil(o.CertificateNumber) {
		return nil, false
	}
	return o.CertificateNumber, true
}

// HasCertificateNumber returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) HasCertificateNumber() bool {
	if o != nil && !IsNil(o.CertificateNumber) {
		return true
	}

	return false
}

// SetCertificateNumber gets a reference to the given string and assigns it to the CertificateNumber field.
func (o *InternationalShipmentResponseCustomsCustomsInfo) SetCertificateNumber(v string) {
	o.CertificateNumber = &v
}

// GetComments returns the Comments field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetComments() string {
	if o == nil || IsNil(o.Comments) {
		var ret string
		return ret
	}
	return *o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetCommentsOk() (*string, bool) {
	if o == nil || IsNil(o.Comments) {
		return nil, false
	}
	return o.Comments, true
}

// HasComments returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) HasComments() bool {
	if o != nil && !IsNil(o.Comments) {
		return true
	}

	return false
}

// SetComments gets a reference to the given string and assigns it to the Comments field.
func (o *InternationalShipmentResponseCustomsCustomsInfo) SetComments(v string) {
	o.Comments = &v
}

// GetCurrencyCode returns the CurrencyCode field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetCurrencyCode() string {
	if o == nil || IsNil(o.CurrencyCode) {
		var ret string
		return ret
	}
	return *o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetCurrencyCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CurrencyCode) {
		return nil, false
	}
	return o.CurrencyCode, true
}

// HasCurrencyCode returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) HasCurrencyCode() bool {
	if o != nil && !IsNil(o.CurrencyCode) {
		return true
	}

	return false
}

// SetCurrencyCode gets a reference to the given string and assigns it to the CurrencyCode field.
func (o *InternationalShipmentResponseCustomsCustomsInfo) SetCurrencyCode(v string) {
	o.CurrencyCode = &v
}

// GetCustomsDeclaredValue returns the CustomsDeclaredValue field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetCustomsDeclaredValue() float32 {
	if o == nil || IsNil(o.CustomsDeclaredValue) {
		var ret float32
		return ret
	}
	return *o.CustomsDeclaredValue
}

// GetCustomsDeclaredValueOk returns a tuple with the CustomsDeclaredValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetCustomsDeclaredValueOk() (*float32, bool) {
	if o == nil || IsNil(o.CustomsDeclaredValue) {
		return nil, false
	}
	return o.CustomsDeclaredValue, true
}

// HasCustomsDeclaredValue returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) HasCustomsDeclaredValue() bool {
	if o != nil && !IsNil(o.CustomsDeclaredValue) {
		return true
	}

	return false
}

// SetCustomsDeclaredValue gets a reference to the given float32 and assigns it to the CustomsDeclaredValue field.
func (o *InternationalShipmentResponseCustomsCustomsInfo) SetCustomsDeclaredValue(v float32) {
	o.CustomsDeclaredValue = &v
}

// GetFromCustomsReference returns the FromCustomsReference field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetFromCustomsReference() string {
	if o == nil || IsNil(o.FromCustomsReference) {
		var ret string
		return ret
	}
	return *o.FromCustomsReference
}

// GetFromCustomsReferenceOk returns a tuple with the FromCustomsReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetFromCustomsReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.FromCustomsReference) {
		return nil, false
	}
	return o.FromCustomsReference, true
}

// HasFromCustomsReference returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) HasFromCustomsReference() bool {
	if o != nil && !IsNil(o.FromCustomsReference) {
		return true
	}

	return false
}

// SetFromCustomsReference gets a reference to the given string and assigns it to the FromCustomsReference field.
func (o *InternationalShipmentResponseCustomsCustomsInfo) SetFromCustomsReference(v string) {
	o.FromCustomsReference = &v
}

// GetImporterCustomsReference returns the ImporterCustomsReference field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetImporterCustomsReference() string {
	if o == nil || IsNil(o.ImporterCustomsReference) {
		var ret string
		return ret
	}
	return *o.ImporterCustomsReference
}

// GetImporterCustomsReferenceOk returns a tuple with the ImporterCustomsReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetImporterCustomsReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.ImporterCustomsReference) {
		return nil, false
	}
	return o.ImporterCustomsReference, true
}

// HasImporterCustomsReference returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) HasImporterCustomsReference() bool {
	if o != nil && !IsNil(o.ImporterCustomsReference) {
		return true
	}

	return false
}

// SetImporterCustomsReference gets a reference to the given string and assigns it to the ImporterCustomsReference field.
func (o *InternationalShipmentResponseCustomsCustomsInfo) SetImporterCustomsReference(v string) {
	o.ImporterCustomsReference = &v
}

// GetInvoiceNumber returns the InvoiceNumber field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetInvoiceNumber() string {
	if o == nil || IsNil(o.InvoiceNumber) {
		var ret string
		return ret
	}
	return *o.InvoiceNumber
}

// GetInvoiceNumberOk returns a tuple with the InvoiceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetInvoiceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.InvoiceNumber) {
		return nil, false
	}
	return o.InvoiceNumber, true
}

// HasInvoiceNumber returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) HasInvoiceNumber() bool {
	if o != nil && !IsNil(o.InvoiceNumber) {
		return true
	}

	return false
}

// SetInvoiceNumber gets a reference to the given string and assigns it to the InvoiceNumber field.
func (o *InternationalShipmentResponseCustomsCustomsInfo) SetInvoiceNumber(v string) {
	o.InvoiceNumber = &v
}

// GetLicenseNumber returns the LicenseNumber field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetLicenseNumber() string {
	if o == nil || IsNil(o.LicenseNumber) {
		var ret string
		return ret
	}
	return *o.LicenseNumber
}

// GetLicenseNumberOk returns a tuple with the LicenseNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetLicenseNumberOk() (*string, bool) {
	if o == nil || IsNil(o.LicenseNumber) {
		return nil, false
	}
	return o.LicenseNumber, true
}

// HasLicenseNumber returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) HasLicenseNumber() bool {
	if o != nil && !IsNil(o.LicenseNumber) {
		return true
	}

	return false
}

// SetLicenseNumber gets a reference to the given string and assigns it to the LicenseNumber field.
func (o *InternationalShipmentResponseCustomsCustomsInfo) SetLicenseNumber(v string) {
	o.LicenseNumber = &v
}

// GetReasonForExport returns the ReasonForExport field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetReasonForExport() string {
	if o == nil || IsNil(o.ReasonForExport) {
		var ret string
		return ret
	}
	return *o.ReasonForExport
}

// GetReasonForExportOk returns a tuple with the ReasonForExport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetReasonForExportOk() (*string, bool) {
	if o == nil || IsNil(o.ReasonForExport) {
		return nil, false
	}
	return o.ReasonForExport, true
}

// HasReasonForExport returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) HasReasonForExport() bool {
	if o != nil && !IsNil(o.ReasonForExport) {
		return true
	}

	return false
}

// SetReasonForExport gets a reference to the given string and assigns it to the ReasonForExport field.
func (o *InternationalShipmentResponseCustomsCustomsInfo) SetReasonForExport(v string) {
	o.ReasonForExport = &v
}

// GetSdrValue returns the SdrValue field value if set, zero value otherwise.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetSdrValue() float32 {
	if o == nil || IsNil(o.SdrValue) {
		var ret float32
		return ret
	}
	return *o.SdrValue
}

// GetSdrValueOk returns a tuple with the SdrValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) GetSdrValueOk() (*float32, bool) {
	if o == nil || IsNil(o.SdrValue) {
		return nil, false
	}
	return o.SdrValue, true
}

// HasSdrValue returns a boolean if a field has been set.
func (o *InternationalShipmentResponseCustomsCustomsInfo) HasSdrValue() bool {
	if o != nil && !IsNil(o.SdrValue) {
		return true
	}

	return false
}

// SetSdrValue gets a reference to the given float32 and assigns it to the SdrValue field.
func (o *InternationalShipmentResponseCustomsCustomsInfo) SetSdrValue(v float32) {
	o.SdrValue = &v
}

func (o InternationalShipmentResponseCustomsCustomsInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternationalShipmentResponseCustomsCustomsInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EELPFC) {
		toSerialize["EELPFC"] = o.EELPFC
	}
	if !IsNil(o.CertificateNumber) {
		toSerialize["certificateNumber"] = o.CertificateNumber
	}
	if !IsNil(o.Comments) {
		toSerialize["comments"] = o.Comments
	}
	if !IsNil(o.CurrencyCode) {
		toSerialize["currencyCode"] = o.CurrencyCode
	}
	if !IsNil(o.CustomsDeclaredValue) {
		toSerialize["customsDeclaredValue"] = o.CustomsDeclaredValue
	}
	if !IsNil(o.FromCustomsReference) {
		toSerialize["fromCustomsReference"] = o.FromCustomsReference
	}
	if !IsNil(o.ImporterCustomsReference) {
		toSerialize["importerCustomsReference"] = o.ImporterCustomsReference
	}
	if !IsNil(o.InvoiceNumber) {
		toSerialize["invoiceNumber"] = o.InvoiceNumber
	}
	if !IsNil(o.LicenseNumber) {
		toSerialize["licenseNumber"] = o.LicenseNumber
	}
	if !IsNil(o.ReasonForExport) {
		toSerialize["reasonForExport"] = o.ReasonForExport
	}
	if !IsNil(o.SdrValue) {
		toSerialize["sdrValue"] = o.SdrValue
	}
	return toSerialize, nil
}

type NullableInternationalShipmentResponseCustomsCustomsInfo struct {
	value *InternationalShipmentResponseCustomsCustomsInfo
	isSet bool
}

func (v NullableInternationalShipmentResponseCustomsCustomsInfo) Get() *InternationalShipmentResponseCustomsCustomsInfo {
	return v.value
}

func (v *NullableInternationalShipmentResponseCustomsCustomsInfo) Set(val *InternationalShipmentResponseCustomsCustomsInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableInternationalShipmentResponseCustomsCustomsInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableInternationalShipmentResponseCustomsCustomsInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternationalShipmentResponseCustomsCustomsInfo(val *InternationalShipmentResponseCustomsCustomsInfo) *NullableInternationalShipmentResponseCustomsCustomsInfo {
	return &NullableInternationalShipmentResponseCustomsCustomsInfo{value: val, isSet: true}
}

func (v NullableInternationalShipmentResponseCustomsCustomsInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternationalShipmentResponseCustomsCustomsInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


