/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the MultipieceRatesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipieceRatesResponse{}

// MultipieceRatesResponse description
type MultipieceRatesResponse struct {
	FromAddress *MultipieceRatesRequestFromAddress `json:"fromAddress,omitempty"`
	ToAddress *MultipieceRatesRequestToAddress `json:"toAddress,omitempty"`
	// description
	ServiceId *string `json:"serviceId,omitempty"`
	// description
	Rates []MultipieceRatesResponseRatesInner `json:"rates,omitempty"`
}

// NewMultipieceRatesResponse instantiates a new MultipieceRatesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipieceRatesResponse() *MultipieceRatesResponse {
	this := MultipieceRatesResponse{}
	return &this
}

// NewMultipieceRatesResponseWithDefaults instantiates a new MultipieceRatesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipieceRatesResponseWithDefaults() *MultipieceRatesResponse {
	this := MultipieceRatesResponse{}
	return &this
}

// GetFromAddress returns the FromAddress field value if set, zero value otherwise.
func (o *MultipieceRatesResponse) GetFromAddress() MultipieceRatesRequestFromAddress {
	if o == nil || IsNil(o.FromAddress) {
		var ret MultipieceRatesRequestFromAddress
		return ret
	}
	return *o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponse) GetFromAddressOk() (*MultipieceRatesRequestFromAddress, bool) {
	if o == nil || IsNil(o.FromAddress) {
		return nil, false
	}
	return o.FromAddress, true
}

// HasFromAddress returns a boolean if a field has been set.
func (o *MultipieceRatesResponse) HasFromAddress() bool {
	if o != nil && !IsNil(o.FromAddress) {
		return true
	}

	return false
}

// SetFromAddress gets a reference to the given MultipieceRatesRequestFromAddress and assigns it to the FromAddress field.
func (o *MultipieceRatesResponse) SetFromAddress(v MultipieceRatesRequestFromAddress) {
	o.FromAddress = &v
}

// GetToAddress returns the ToAddress field value if set, zero value otherwise.
func (o *MultipieceRatesResponse) GetToAddress() MultipieceRatesRequestToAddress {
	if o == nil || IsNil(o.ToAddress) {
		var ret MultipieceRatesRequestToAddress
		return ret
	}
	return *o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponse) GetToAddressOk() (*MultipieceRatesRequestToAddress, bool) {
	if o == nil || IsNil(o.ToAddress) {
		return nil, false
	}
	return o.ToAddress, true
}

// HasToAddress returns a boolean if a field has been set.
func (o *MultipieceRatesResponse) HasToAddress() bool {
	if o != nil && !IsNil(o.ToAddress) {
		return true
	}

	return false
}

// SetToAddress gets a reference to the given MultipieceRatesRequestToAddress and assigns it to the ToAddress field.
func (o *MultipieceRatesResponse) SetToAddress(v MultipieceRatesRequestToAddress) {
	o.ToAddress = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *MultipieceRatesResponse) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponse) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *MultipieceRatesResponse) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *MultipieceRatesResponse) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetRates returns the Rates field value if set, zero value otherwise.
func (o *MultipieceRatesResponse) GetRates() []MultipieceRatesResponseRatesInner {
	if o == nil || IsNil(o.Rates) {
		var ret []MultipieceRatesResponseRatesInner
		return ret
	}
	return o.Rates
}

// GetRatesOk returns a tuple with the Rates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceRatesResponse) GetRatesOk() ([]MultipieceRatesResponseRatesInner, bool) {
	if o == nil || IsNil(o.Rates) {
		return nil, false
	}
	return o.Rates, true
}

// HasRates returns a boolean if a field has been set.
func (o *MultipieceRatesResponse) HasRates() bool {
	if o != nil && !IsNil(o.Rates) {
		return true
	}

	return false
}

// SetRates gets a reference to the given []MultipieceRatesResponseRatesInner and assigns it to the Rates field.
func (o *MultipieceRatesResponse) SetRates(v []MultipieceRatesResponseRatesInner) {
	o.Rates = v
}

func (o MultipieceRatesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipieceRatesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromAddress) {
		toSerialize["fromAddress"] = o.FromAddress
	}
	if !IsNil(o.ToAddress) {
		toSerialize["toAddress"] = o.ToAddress
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.Rates) {
		toSerialize["rates"] = o.Rates
	}
	return toSerialize, nil
}

type NullableMultipieceRatesResponse struct {
	value *MultipieceRatesResponse
	isSet bool
}

func (v NullableMultipieceRatesResponse) Get() *MultipieceRatesResponse {
	return v.value
}

func (v *NullableMultipieceRatesResponse) Set(val *MultipieceRatesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipieceRatesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipieceRatesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipieceRatesResponse(val *MultipieceRatesResponse) *NullableMultipieceRatesResponse {
	return &NullableMultipieceRatesResponse{value: val, isSet: true}
}

func (v NullableMultipieceRatesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipieceRatesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


