/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the SchedulePickupCancelResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchedulePickupCancelResponse{}

// SchedulePickupCancelResponse struct for SchedulePickupCancelResponse
type SchedulePickupCancelResponse struct {
	Pickups *SchedulePickupCancelResponsePickups `json:"pickups,omitempty"`
}

// NewSchedulePickupCancelResponse instantiates a new SchedulePickupCancelResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulePickupCancelResponse() *SchedulePickupCancelResponse {
	this := SchedulePickupCancelResponse{}
	return &this
}

// NewSchedulePickupCancelResponseWithDefaults instantiates a new SchedulePickupCancelResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulePickupCancelResponseWithDefaults() *SchedulePickupCancelResponse {
	this := SchedulePickupCancelResponse{}
	return &this
}

// GetPickups returns the Pickups field value if set, zero value otherwise.
func (o *SchedulePickupCancelResponse) GetPickups() SchedulePickupCancelResponsePickups {
	if o == nil || IsNil(o.Pickups) {
		var ret SchedulePickupCancelResponsePickups
		return ret
	}
	return *o.Pickups
}

// GetPickupsOk returns a tuple with the Pickups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupCancelResponse) GetPickupsOk() (*SchedulePickupCancelResponsePickups, bool) {
	if o == nil || IsNil(o.Pickups) {
		return nil, false
	}
	return o.Pickups, true
}

// HasPickups returns a boolean if a field has been set.
func (o *SchedulePickupCancelResponse) HasPickups() bool {
	if o != nil && !IsNil(o.Pickups) {
		return true
	}

	return false
}

// SetPickups gets a reference to the given SchedulePickupCancelResponsePickups and assigns it to the Pickups field.
func (o *SchedulePickupCancelResponse) SetPickups(v SchedulePickupCancelResponsePickups) {
	o.Pickups = &v
}

func (o SchedulePickupCancelResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchedulePickupCancelResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pickups) {
		toSerialize["pickups"] = o.Pickups
	}
	return toSerialize, nil
}

type NullableSchedulePickupCancelResponse struct {
	value *SchedulePickupCancelResponse
	isSet bool
}

func (v NullableSchedulePickupCancelResponse) Get() *SchedulePickupCancelResponse {
	return v.value
}

func (v *NullableSchedulePickupCancelResponse) Set(val *SchedulePickupCancelResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulePickupCancelResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulePickupCancelResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulePickupCancelResponse(val *SchedulePickupCancelResponse) *NullableSchedulePickupCancelResponse {
	return &NullableSchedulePickupCancelResponse{value: val, isSet: true}
}

func (v NullableSchedulePickupCancelResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulePickupCancelResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


