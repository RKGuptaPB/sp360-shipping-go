/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the SchedulePickupCancelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchedulePickupCancelRequest{}

// SchedulePickupCancelRequest struct for SchedulePickupCancelRequest
type SchedulePickupCancelRequest struct {
	// description
	PickupIds []string `json:"pickupIds,omitempty"`
	// description
	Options []SchedulePickupCancelRequestOptionsInner `json:"options,omitempty"`
}

// NewSchedulePickupCancelRequest instantiates a new SchedulePickupCancelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulePickupCancelRequest() *SchedulePickupCancelRequest {
	this := SchedulePickupCancelRequest{}
	return &this
}

// NewSchedulePickupCancelRequestWithDefaults instantiates a new SchedulePickupCancelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulePickupCancelRequestWithDefaults() *SchedulePickupCancelRequest {
	this := SchedulePickupCancelRequest{}
	return &this
}

// GetPickupIds returns the PickupIds field value if set, zero value otherwise.
func (o *SchedulePickupCancelRequest) GetPickupIds() []string {
	if o == nil || IsNil(o.PickupIds) {
		var ret []string
		return ret
	}
	return o.PickupIds
}

// GetPickupIdsOk returns a tuple with the PickupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupCancelRequest) GetPickupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.PickupIds) {
		return nil, false
	}
	return o.PickupIds, true
}

// HasPickupIds returns a boolean if a field has been set.
func (o *SchedulePickupCancelRequest) HasPickupIds() bool {
	if o != nil && !IsNil(o.PickupIds) {
		return true
	}

	return false
}

// SetPickupIds gets a reference to the given []string and assigns it to the PickupIds field.
func (o *SchedulePickupCancelRequest) SetPickupIds(v []string) {
	o.PickupIds = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *SchedulePickupCancelRequest) GetOptions() []SchedulePickupCancelRequestOptionsInner {
	if o == nil || IsNil(o.Options) {
		var ret []SchedulePickupCancelRequestOptionsInner
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupCancelRequest) GetOptionsOk() ([]SchedulePickupCancelRequestOptionsInner, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *SchedulePickupCancelRequest) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []SchedulePickupCancelRequestOptionsInner and assigns it to the Options field.
func (o *SchedulePickupCancelRequest) SetOptions(v []SchedulePickupCancelRequestOptionsInner) {
	o.Options = v
}

func (o SchedulePickupCancelRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchedulePickupCancelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PickupIds) {
		toSerialize["pickupIds"] = o.PickupIds
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullableSchedulePickupCancelRequest struct {
	value *SchedulePickupCancelRequest
	isSet bool
}

func (v NullableSchedulePickupCancelRequest) Get() *SchedulePickupCancelRequest {
	return v.value
}

func (v *NullableSchedulePickupCancelRequest) Set(val *SchedulePickupCancelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulePickupCancelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulePickupCancelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulePickupCancelRequest(val *SchedulePickupCancelRequest) *NullableSchedulePickupCancelRequest {
	return &NullableSchedulePickupCancelRequest{value: val, isSet: true}
}

func (v NullableSchedulePickupCancelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulePickupCancelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


