/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the ShipmentDomesticByRateGroupByRateGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentDomesticByRateGroupByRateGroup{}

// ShipmentDomesticByRateGroupByRateGroup Indicates the category to select how cheap the carrier service is or which carrier has fastest service. <br /> It displays the list of those services. 
type ShipmentDomesticByRateGroupByRateGroup struct {
	// The Rule Type is a condition applied to RateGroup by Product side, that can be applicable for a client or set of client users.
	RuleType *string `json:"ruleType,omitempty"`
	// This is a unique identifier assigned to the created RateGroup, which is used in the shipment creation.
	RateGroupId *string `json:"rateGroupId,omitempty"`
}

// NewShipmentDomesticByRateGroupByRateGroup instantiates a new ShipmentDomesticByRateGroupByRateGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentDomesticByRateGroupByRateGroup() *ShipmentDomesticByRateGroupByRateGroup {
	this := ShipmentDomesticByRateGroupByRateGroup{}
	return &this
}

// NewShipmentDomesticByRateGroupByRateGroupWithDefaults instantiates a new ShipmentDomesticByRateGroupByRateGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentDomesticByRateGroupByRateGroupWithDefaults() *ShipmentDomesticByRateGroupByRateGroup {
	this := ShipmentDomesticByRateGroupByRateGroup{}
	return &this
}

// GetRuleType returns the RuleType field value if set, zero value otherwise.
func (o *ShipmentDomesticByRateGroupByRateGroup) GetRuleType() string {
	if o == nil || IsNil(o.RuleType) {
		var ret string
		return ret
	}
	return *o.RuleType
}

// GetRuleTypeOk returns a tuple with the RuleType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRateGroupByRateGroup) GetRuleTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RuleType) {
		return nil, false
	}
	return o.RuleType, true
}

// HasRuleType returns a boolean if a field has been set.
func (o *ShipmentDomesticByRateGroupByRateGroup) HasRuleType() bool {
	if o != nil && !IsNil(o.RuleType) {
		return true
	}

	return false
}

// SetRuleType gets a reference to the given string and assigns it to the RuleType field.
func (o *ShipmentDomesticByRateGroupByRateGroup) SetRuleType(v string) {
	o.RuleType = &v
}

// GetRateGroupId returns the RateGroupId field value if set, zero value otherwise.
func (o *ShipmentDomesticByRateGroupByRateGroup) GetRateGroupId() string {
	if o == nil || IsNil(o.RateGroupId) {
		var ret string
		return ret
	}
	return *o.RateGroupId
}

// GetRateGroupIdOk returns a tuple with the RateGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRateGroupByRateGroup) GetRateGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.RateGroupId) {
		return nil, false
	}
	return o.RateGroupId, true
}

// HasRateGroupId returns a boolean if a field has been set.
func (o *ShipmentDomesticByRateGroupByRateGroup) HasRateGroupId() bool {
	if o != nil && !IsNil(o.RateGroupId) {
		return true
	}

	return false
}

// SetRateGroupId gets a reference to the given string and assigns it to the RateGroupId field.
func (o *ShipmentDomesticByRateGroupByRateGroup) SetRateGroupId(v string) {
	o.RateGroupId = &v
}

func (o ShipmentDomesticByRateGroupByRateGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentDomesticByRateGroupByRateGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RuleType) {
		toSerialize["ruleType"] = o.RuleType
	}
	if !IsNil(o.RateGroupId) {
		toSerialize["rateGroupId"] = o.RateGroupId
	}
	return toSerialize, nil
}

type NullableShipmentDomesticByRateGroupByRateGroup struct {
	value *ShipmentDomesticByRateGroupByRateGroup
	isSet bool
}

func (v NullableShipmentDomesticByRateGroupByRateGroup) Get() *ShipmentDomesticByRateGroupByRateGroup {
	return v.value
}

func (v *NullableShipmentDomesticByRateGroupByRateGroup) Set(val *ShipmentDomesticByRateGroupByRateGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentDomesticByRateGroupByRateGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentDomesticByRateGroupByRateGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentDomesticByRateGroupByRateGroup(val *ShipmentDomesticByRateGroupByRateGroup) *NullableShipmentDomesticByRateGroupByRateGroup {
	return &NullableShipmentDomesticByRateGroupByRateGroup{value: val, isSet: true}
}

func (v NullableShipmentDomesticByRateGroupByRateGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentDomesticByRateGroupByRateGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


