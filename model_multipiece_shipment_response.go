/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the MultipieceShipmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipieceShipmentResponse{}

// MultipieceShipmentResponse struct for MultipieceShipmentResponse
type MultipieceShipmentResponse struct {
	// Key assigned by the shipping system to the transaction.
	CorrelationId *string `json:"correlationId,omitempty"`
	// description
	LabelLayout []MultipieceShipmentResponseLabelLayoutInner `json:"labelLayout,omitempty"`
	FromAddress *MultipieceShipmentResponseFromAddress `json:"fromAddress,omitempty"`
	// description
	MultiPieceRates []MultipieceShipmentResponseMultiPieceRatesInner `json:"multiPieceRates,omitempty"`
	// description
	ParcelTrackingNumber *string `json:"parcelTrackingNumber,omitempty"`
	// description
	ShipmentId *string `json:"shipmentId,omitempty"`
	ShipmentOptions *MultipieceShipmentRequestShipmentOptions `json:"shipmentOptions,omitempty"`
	ToAddress *MultipieceShipmentRequestToAddress `json:"toAddress,omitempty"`
}

// NewMultipieceShipmentResponse instantiates a new MultipieceShipmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipieceShipmentResponse() *MultipieceShipmentResponse {
	this := MultipieceShipmentResponse{}
	return &this
}

// NewMultipieceShipmentResponseWithDefaults instantiates a new MultipieceShipmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipieceShipmentResponseWithDefaults() *MultipieceShipmentResponse {
	this := MultipieceShipmentResponse{}
	return &this
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *MultipieceShipmentResponse) GetCorrelationId() string {
	if o == nil || IsNil(o.CorrelationId) {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponse) GetCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelationId) {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *MultipieceShipmentResponse) HasCorrelationId() bool {
	if o != nil && !IsNil(o.CorrelationId) {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *MultipieceShipmentResponse) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// GetLabelLayout returns the LabelLayout field value if set, zero value otherwise.
func (o *MultipieceShipmentResponse) GetLabelLayout() []MultipieceShipmentResponseLabelLayoutInner {
	if o == nil || IsNil(o.LabelLayout) {
		var ret []MultipieceShipmentResponseLabelLayoutInner
		return ret
	}
	return o.LabelLayout
}

// GetLabelLayoutOk returns a tuple with the LabelLayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponse) GetLabelLayoutOk() ([]MultipieceShipmentResponseLabelLayoutInner, bool) {
	if o == nil || IsNil(o.LabelLayout) {
		return nil, false
	}
	return o.LabelLayout, true
}

// HasLabelLayout returns a boolean if a field has been set.
func (o *MultipieceShipmentResponse) HasLabelLayout() bool {
	if o != nil && !IsNil(o.LabelLayout) {
		return true
	}

	return false
}

// SetLabelLayout gets a reference to the given []MultipieceShipmentResponseLabelLayoutInner and assigns it to the LabelLayout field.
func (o *MultipieceShipmentResponse) SetLabelLayout(v []MultipieceShipmentResponseLabelLayoutInner) {
	o.LabelLayout = v
}

// GetFromAddress returns the FromAddress field value if set, zero value otherwise.
func (o *MultipieceShipmentResponse) GetFromAddress() MultipieceShipmentResponseFromAddress {
	if o == nil || IsNil(o.FromAddress) {
		var ret MultipieceShipmentResponseFromAddress
		return ret
	}
	return *o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponse) GetFromAddressOk() (*MultipieceShipmentResponseFromAddress, bool) {
	if o == nil || IsNil(o.FromAddress) {
		return nil, false
	}
	return o.FromAddress, true
}

// HasFromAddress returns a boolean if a field has been set.
func (o *MultipieceShipmentResponse) HasFromAddress() bool {
	if o != nil && !IsNil(o.FromAddress) {
		return true
	}

	return false
}

// SetFromAddress gets a reference to the given MultipieceShipmentResponseFromAddress and assigns it to the FromAddress field.
func (o *MultipieceShipmentResponse) SetFromAddress(v MultipieceShipmentResponseFromAddress) {
	o.FromAddress = &v
}

// GetMultiPieceRates returns the MultiPieceRates field value if set, zero value otherwise.
func (o *MultipieceShipmentResponse) GetMultiPieceRates() []MultipieceShipmentResponseMultiPieceRatesInner {
	if o == nil || IsNil(o.MultiPieceRates) {
		var ret []MultipieceShipmentResponseMultiPieceRatesInner
		return ret
	}
	return o.MultiPieceRates
}

// GetMultiPieceRatesOk returns a tuple with the MultiPieceRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponse) GetMultiPieceRatesOk() ([]MultipieceShipmentResponseMultiPieceRatesInner, bool) {
	if o == nil || IsNil(o.MultiPieceRates) {
		return nil, false
	}
	return o.MultiPieceRates, true
}

// HasMultiPieceRates returns a boolean if a field has been set.
func (o *MultipieceShipmentResponse) HasMultiPieceRates() bool {
	if o != nil && !IsNil(o.MultiPieceRates) {
		return true
	}

	return false
}

// SetMultiPieceRates gets a reference to the given []MultipieceShipmentResponseMultiPieceRatesInner and assigns it to the MultiPieceRates field.
func (o *MultipieceShipmentResponse) SetMultiPieceRates(v []MultipieceShipmentResponseMultiPieceRatesInner) {
	o.MultiPieceRates = v
}

// GetParcelTrackingNumber returns the ParcelTrackingNumber field value if set, zero value otherwise.
func (o *MultipieceShipmentResponse) GetParcelTrackingNumber() string {
	if o == nil || IsNil(o.ParcelTrackingNumber) {
		var ret string
		return ret
	}
	return *o.ParcelTrackingNumber
}

// GetParcelTrackingNumberOk returns a tuple with the ParcelTrackingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponse) GetParcelTrackingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelTrackingNumber) {
		return nil, false
	}
	return o.ParcelTrackingNumber, true
}

// HasParcelTrackingNumber returns a boolean if a field has been set.
func (o *MultipieceShipmentResponse) HasParcelTrackingNumber() bool {
	if o != nil && !IsNil(o.ParcelTrackingNumber) {
		return true
	}

	return false
}

// SetParcelTrackingNumber gets a reference to the given string and assigns it to the ParcelTrackingNumber field.
func (o *MultipieceShipmentResponse) SetParcelTrackingNumber(v string) {
	o.ParcelTrackingNumber = &v
}

// GetShipmentId returns the ShipmentId field value if set, zero value otherwise.
func (o *MultipieceShipmentResponse) GetShipmentId() string {
	if o == nil || IsNil(o.ShipmentId) {
		var ret string
		return ret
	}
	return *o.ShipmentId
}

// GetShipmentIdOk returns a tuple with the ShipmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponse) GetShipmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentId) {
		return nil, false
	}
	return o.ShipmentId, true
}

// HasShipmentId returns a boolean if a field has been set.
func (o *MultipieceShipmentResponse) HasShipmentId() bool {
	if o != nil && !IsNil(o.ShipmentId) {
		return true
	}

	return false
}

// SetShipmentId gets a reference to the given string and assigns it to the ShipmentId field.
func (o *MultipieceShipmentResponse) SetShipmentId(v string) {
	o.ShipmentId = &v
}

// GetShipmentOptions returns the ShipmentOptions field value if set, zero value otherwise.
func (o *MultipieceShipmentResponse) GetShipmentOptions() MultipieceShipmentRequestShipmentOptions {
	if o == nil || IsNil(o.ShipmentOptions) {
		var ret MultipieceShipmentRequestShipmentOptions
		return ret
	}
	return *o.ShipmentOptions
}

// GetShipmentOptionsOk returns a tuple with the ShipmentOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponse) GetShipmentOptionsOk() (*MultipieceShipmentRequestShipmentOptions, bool) {
	if o == nil || IsNil(o.ShipmentOptions) {
		return nil, false
	}
	return o.ShipmentOptions, true
}

// HasShipmentOptions returns a boolean if a field has been set.
func (o *MultipieceShipmentResponse) HasShipmentOptions() bool {
	if o != nil && !IsNil(o.ShipmentOptions) {
		return true
	}

	return false
}

// SetShipmentOptions gets a reference to the given MultipieceShipmentRequestShipmentOptions and assigns it to the ShipmentOptions field.
func (o *MultipieceShipmentResponse) SetShipmentOptions(v MultipieceShipmentRequestShipmentOptions) {
	o.ShipmentOptions = &v
}

// GetToAddress returns the ToAddress field value if set, zero value otherwise.
func (o *MultipieceShipmentResponse) GetToAddress() MultipieceShipmentRequestToAddress {
	if o == nil || IsNil(o.ToAddress) {
		var ret MultipieceShipmentRequestToAddress
		return ret
	}
	return *o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceShipmentResponse) GetToAddressOk() (*MultipieceShipmentRequestToAddress, bool) {
	if o == nil || IsNil(o.ToAddress) {
		return nil, false
	}
	return o.ToAddress, true
}

// HasToAddress returns a boolean if a field has been set.
func (o *MultipieceShipmentResponse) HasToAddress() bool {
	if o != nil && !IsNil(o.ToAddress) {
		return true
	}

	return false
}

// SetToAddress gets a reference to the given MultipieceShipmentRequestToAddress and assigns it to the ToAddress field.
func (o *MultipieceShipmentResponse) SetToAddress(v MultipieceShipmentRequestToAddress) {
	o.ToAddress = &v
}

func (o MultipieceShipmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipieceShipmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CorrelationId) {
		toSerialize["correlationId"] = o.CorrelationId
	}
	if !IsNil(o.LabelLayout) {
		toSerialize["labelLayout"] = o.LabelLayout
	}
	if !IsNil(o.FromAddress) {
		toSerialize["fromAddress"] = o.FromAddress
	}
	if !IsNil(o.MultiPieceRates) {
		toSerialize["multiPieceRates"] = o.MultiPieceRates
	}
	if !IsNil(o.ParcelTrackingNumber) {
		toSerialize["parcelTrackingNumber"] = o.ParcelTrackingNumber
	}
	if !IsNil(o.ShipmentId) {
		toSerialize["shipmentId"] = o.ShipmentId
	}
	if !IsNil(o.ShipmentOptions) {
		toSerialize["shipmentOptions"] = o.ShipmentOptions
	}
	if !IsNil(o.ToAddress) {
		toSerialize["toAddress"] = o.ToAddress
	}
	return toSerialize, nil
}

type NullableMultipieceShipmentResponse struct {
	value *MultipieceShipmentResponse
	isSet bool
}

func (v NullableMultipieceShipmentResponse) Get() *MultipieceShipmentResponse {
	return v.value
}

func (v *NullableMultipieceShipmentResponse) Set(val *MultipieceShipmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipieceShipmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipieceShipmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipieceShipmentResponse(val *MultipieceShipmentResponse) *NullableMultipieceShipmentResponse {
	return &NullableMultipieceShipmentResponse{value: val, isSet: true}
}

func (v NullableMultipieceShipmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipieceShipmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


