/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the SchedulePickupDHLEXPRequestPickupAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchedulePickupDHLEXPRequestPickupAddress{}

// SchedulePickupDHLEXPRequestPickupAddress struct for SchedulePickupDHLEXPRequestPickupAddress
type SchedulePickupDHLEXPRequestPickupAddress struct {
	// description
	Name *string `json:"name,omitempty"`
	// description
	AddressLine1 *string `json:"addressLine1,omitempty"`
	// description
	CityTown *string `json:"cityTown,omitempty"`
	// description
	StateProvince *string `json:"stateProvince,omitempty"`
	// description
	PostalCode *string `json:"postalCode,omitempty"`
	// description
	CountryCode *string `json:"countryCode,omitempty"`
	// description
	Phone *string `json:"phone,omitempty"`
	// description
	Company *string `json:"company,omitempty"`
	// description
	Email *string `json:"email,omitempty"`
}

// NewSchedulePickupDHLEXPRequestPickupAddress instantiates a new SchedulePickupDHLEXPRequestPickupAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulePickupDHLEXPRequestPickupAddress() *SchedulePickupDHLEXPRequestPickupAddress {
	this := SchedulePickupDHLEXPRequestPickupAddress{}
	return &this
}

// NewSchedulePickupDHLEXPRequestPickupAddressWithDefaults instantiates a new SchedulePickupDHLEXPRequestPickupAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulePickupDHLEXPRequestPickupAddressWithDefaults() *SchedulePickupDHLEXPRequestPickupAddress {
	this := SchedulePickupDHLEXPRequestPickupAddress{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SchedulePickupDHLEXPRequestPickupAddress) SetName(v string) {
	o.Name = &v
}

// GetAddressLine1 returns the AddressLine1 field value if set, zero value otherwise.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetAddressLine1() string {
	if o == nil || IsNil(o.AddressLine1) {
		var ret string
		return ret
	}
	return *o.AddressLine1
}

// GetAddressLine1Ok returns a tuple with the AddressLine1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetAddressLine1Ok() (*string, bool) {
	if o == nil || IsNil(o.AddressLine1) {
		return nil, false
	}
	return o.AddressLine1, true
}

// HasAddressLine1 returns a boolean if a field has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) HasAddressLine1() bool {
	if o != nil && !IsNil(o.AddressLine1) {
		return true
	}

	return false
}

// SetAddressLine1 gets a reference to the given string and assigns it to the AddressLine1 field.
func (o *SchedulePickupDHLEXPRequestPickupAddress) SetAddressLine1(v string) {
	o.AddressLine1 = &v
}

// GetCityTown returns the CityTown field value if set, zero value otherwise.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetCityTown() string {
	if o == nil || IsNil(o.CityTown) {
		var ret string
		return ret
	}
	return *o.CityTown
}

// GetCityTownOk returns a tuple with the CityTown field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetCityTownOk() (*string, bool) {
	if o == nil || IsNil(o.CityTown) {
		return nil, false
	}
	return o.CityTown, true
}

// HasCityTown returns a boolean if a field has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) HasCityTown() bool {
	if o != nil && !IsNil(o.CityTown) {
		return true
	}

	return false
}

// SetCityTown gets a reference to the given string and assigns it to the CityTown field.
func (o *SchedulePickupDHLEXPRequestPickupAddress) SetCityTown(v string) {
	o.CityTown = &v
}

// GetStateProvince returns the StateProvince field value if set, zero value otherwise.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetStateProvince() string {
	if o == nil || IsNil(o.StateProvince) {
		var ret string
		return ret
	}
	return *o.StateProvince
}

// GetStateProvinceOk returns a tuple with the StateProvince field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetStateProvinceOk() (*string, bool) {
	if o == nil || IsNil(o.StateProvince) {
		return nil, false
	}
	return o.StateProvince, true
}

// HasStateProvince returns a boolean if a field has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) HasStateProvince() bool {
	if o != nil && !IsNil(o.StateProvince) {
		return true
	}

	return false
}

// SetStateProvince gets a reference to the given string and assigns it to the StateProvince field.
func (o *SchedulePickupDHLEXPRequestPickupAddress) SetStateProvince(v string) {
	o.StateProvince = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *SchedulePickupDHLEXPRequestPickupAddress) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetCountryCode returns the CountryCode field value if set, zero value otherwise.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetCountryCode() string {
	if o == nil || IsNil(o.CountryCode) {
		var ret string
		return ret
	}
	return *o.CountryCode
}

// GetCountryCodeOk returns a tuple with the CountryCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetCountryCodeOk() (*string, bool) {
	if o == nil || IsNil(o.CountryCode) {
		return nil, false
	}
	return o.CountryCode, true
}

// HasCountryCode returns a boolean if a field has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) HasCountryCode() bool {
	if o != nil && !IsNil(o.CountryCode) {
		return true
	}

	return false
}

// SetCountryCode gets a reference to the given string and assigns it to the CountryCode field.
func (o *SchedulePickupDHLEXPRequestPickupAddress) SetCountryCode(v string) {
	o.CountryCode = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *SchedulePickupDHLEXPRequestPickupAddress) SetPhone(v string) {
	o.Phone = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetCompany() string {
	if o == nil || IsNil(o.Company) {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetCompanyOk() (*string, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *SchedulePickupDHLEXPRequestPickupAddress) SetCompany(v string) {
	o.Company = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *SchedulePickupDHLEXPRequestPickupAddress) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *SchedulePickupDHLEXPRequestPickupAddress) SetEmail(v string) {
	o.Email = &v
}

func (o SchedulePickupDHLEXPRequestPickupAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchedulePickupDHLEXPRequestPickupAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AddressLine1) {
		toSerialize["addressLine1"] = o.AddressLine1
	}
	if !IsNil(o.CityTown) {
		toSerialize["cityTown"] = o.CityTown
	}
	if !IsNil(o.StateProvince) {
		toSerialize["stateProvince"] = o.StateProvince
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postalCode"] = o.PostalCode
	}
	if !IsNil(o.CountryCode) {
		toSerialize["countryCode"] = o.CountryCode
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	return toSerialize, nil
}

type NullableSchedulePickupDHLEXPRequestPickupAddress struct {
	value *SchedulePickupDHLEXPRequestPickupAddress
	isSet bool
}

func (v NullableSchedulePickupDHLEXPRequestPickupAddress) Get() *SchedulePickupDHLEXPRequestPickupAddress {
	return v.value
}

func (v *NullableSchedulePickupDHLEXPRequestPickupAddress) Set(val *SchedulePickupDHLEXPRequestPickupAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulePickupDHLEXPRequestPickupAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulePickupDHLEXPRequestPickupAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulePickupDHLEXPRequestPickupAddress(val *SchedulePickupDHLEXPRequestPickupAddress) *NullableSchedulePickupDHLEXPRequestPickupAddress {
	return &NullableSchedulePickupDHLEXPRequestPickupAddress{value: val, isSet: true}
}

func (v NullableSchedulePickupDHLEXPRequestPickupAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulePickupDHLEXPRequestPickupAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


