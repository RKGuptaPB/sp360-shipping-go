/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the RateResponseV2SurchargesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RateResponseV2SurchargesInner{}

// RateResponseV2SurchargesInner struct for RateResponseV2SurchargesInner
type RateResponseV2SurchargesInner struct {
	// The amount of the surcharge.
	Fee *float32 `json:"fee,omitempty"`
	// The type of surcharge.
	Name *string `json:"name,omitempty"`
}

// NewRateResponseV2SurchargesInner instantiates a new RateResponseV2SurchargesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRateResponseV2SurchargesInner() *RateResponseV2SurchargesInner {
	this := RateResponseV2SurchargesInner{}
	return &this
}

// NewRateResponseV2SurchargesInnerWithDefaults instantiates a new RateResponseV2SurchargesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRateResponseV2SurchargesInnerWithDefaults() *RateResponseV2SurchargesInner {
	this := RateResponseV2SurchargesInner{}
	return &this
}

// GetFee returns the Fee field value if set, zero value otherwise.
func (o *RateResponseV2SurchargesInner) GetFee() float32 {
	if o == nil || IsNil(o.Fee) {
		var ret float32
		return ret
	}
	return *o.Fee
}

// GetFeeOk returns a tuple with the Fee field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateResponseV2SurchargesInner) GetFeeOk() (*float32, bool) {
	if o == nil || IsNil(o.Fee) {
		return nil, false
	}
	return o.Fee, true
}

// HasFee returns a boolean if a field has been set.
func (o *RateResponseV2SurchargesInner) HasFee() bool {
	if o != nil && !IsNil(o.Fee) {
		return true
	}

	return false
}

// SetFee gets a reference to the given float32 and assigns it to the Fee field.
func (o *RateResponseV2SurchargesInner) SetFee(v float32) {
	o.Fee = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RateResponseV2SurchargesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateResponseV2SurchargesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RateResponseV2SurchargesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RateResponseV2SurchargesInner) SetName(v string) {
	o.Name = &v
}

func (o RateResponseV2SurchargesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RateResponseV2SurchargesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fee) {
		toSerialize["fee"] = o.Fee
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableRateResponseV2SurchargesInner struct {
	value *RateResponseV2SurchargesInner
	isSet bool
}

func (v NullableRateResponseV2SurchargesInner) Get() *RateResponseV2SurchargesInner {
	return v.value
}

func (v *NullableRateResponseV2SurchargesInner) Set(val *RateResponseV2SurchargesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRateResponseV2SurchargesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRateResponseV2SurchargesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRateResponseV2SurchargesInner(val *RateResponseV2SurchargesInner) *NullableRateResponseV2SurchargesInner {
	return &NullableRateResponseV2SurchargesInner{value: val, isSet: true}
}

func (v NullableRateResponseV2SurchargesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRateResponseV2SurchargesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


