/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the PrintDocumentRequestReference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PrintDocumentRequestReference{}

// PrintDocumentRequestReference Contains key value map for passing references. Max references allowed is 6.
type PrintDocumentRequestReference struct {
	// Reference 1 refers to add additional information if any 
	Reference1 *string `json:"reference1,omitempty"`
	// Reference 2 refers to add additional information if any
	Reference2 *string `json:"reference2,omitempty"`
	// Reference 3 refers to add additional information if any in case if the given information is not enough,for Reference field 1 and 2 respectively.
	Reference3 *string `json:"reference3,omitempty"`
	// Reference 4 refers to add additional information if any in case if the given information is not enough,for Reference field 1 and 2 respectively.
	Reference4 *string `json:"reference4,omitempty"`
}

// NewPrintDocumentRequestReference instantiates a new PrintDocumentRequestReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPrintDocumentRequestReference() *PrintDocumentRequestReference {
	this := PrintDocumentRequestReference{}
	return &this
}

// NewPrintDocumentRequestReferenceWithDefaults instantiates a new PrintDocumentRequestReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPrintDocumentRequestReferenceWithDefaults() *PrintDocumentRequestReference {
	this := PrintDocumentRequestReference{}
	return &this
}

// GetReference1 returns the Reference1 field value if set, zero value otherwise.
func (o *PrintDocumentRequestReference) GetReference1() string {
	if o == nil || IsNil(o.Reference1) {
		var ret string
		return ret
	}
	return *o.Reference1
}

// GetReference1Ok returns a tuple with the Reference1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrintDocumentRequestReference) GetReference1Ok() (*string, bool) {
	if o == nil || IsNil(o.Reference1) {
		return nil, false
	}
	return o.Reference1, true
}

// HasReference1 returns a boolean if a field has been set.
func (o *PrintDocumentRequestReference) HasReference1() bool {
	if o != nil && !IsNil(o.Reference1) {
		return true
	}

	return false
}

// SetReference1 gets a reference to the given string and assigns it to the Reference1 field.
func (o *PrintDocumentRequestReference) SetReference1(v string) {
	o.Reference1 = &v
}

// GetReference2 returns the Reference2 field value if set, zero value otherwise.
func (o *PrintDocumentRequestReference) GetReference2() string {
	if o == nil || IsNil(o.Reference2) {
		var ret string
		return ret
	}
	return *o.Reference2
}

// GetReference2Ok returns a tuple with the Reference2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrintDocumentRequestReference) GetReference2Ok() (*string, bool) {
	if o == nil || IsNil(o.Reference2) {
		return nil, false
	}
	return o.Reference2, true
}

// HasReference2 returns a boolean if a field has been set.
func (o *PrintDocumentRequestReference) HasReference2() bool {
	if o != nil && !IsNil(o.Reference2) {
		return true
	}

	return false
}

// SetReference2 gets a reference to the given string and assigns it to the Reference2 field.
func (o *PrintDocumentRequestReference) SetReference2(v string) {
	o.Reference2 = &v
}

// GetReference3 returns the Reference3 field value if set, zero value otherwise.
func (o *PrintDocumentRequestReference) GetReference3() string {
	if o == nil || IsNil(o.Reference3) {
		var ret string
		return ret
	}
	return *o.Reference3
}

// GetReference3Ok returns a tuple with the Reference3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrintDocumentRequestReference) GetReference3Ok() (*string, bool) {
	if o == nil || IsNil(o.Reference3) {
		return nil, false
	}
	return o.Reference3, true
}

// HasReference3 returns a boolean if a field has been set.
func (o *PrintDocumentRequestReference) HasReference3() bool {
	if o != nil && !IsNil(o.Reference3) {
		return true
	}

	return false
}

// SetReference3 gets a reference to the given string and assigns it to the Reference3 field.
func (o *PrintDocumentRequestReference) SetReference3(v string) {
	o.Reference3 = &v
}

// GetReference4 returns the Reference4 field value if set, zero value otherwise.
func (o *PrintDocumentRequestReference) GetReference4() string {
	if o == nil || IsNil(o.Reference4) {
		var ret string
		return ret
	}
	return *o.Reference4
}

// GetReference4Ok returns a tuple with the Reference4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PrintDocumentRequestReference) GetReference4Ok() (*string, bool) {
	if o == nil || IsNil(o.Reference4) {
		return nil, false
	}
	return o.Reference4, true
}

// HasReference4 returns a boolean if a field has been set.
func (o *PrintDocumentRequestReference) HasReference4() bool {
	if o != nil && !IsNil(o.Reference4) {
		return true
	}

	return false
}

// SetReference4 gets a reference to the given string and assigns it to the Reference4 field.
func (o *PrintDocumentRequestReference) SetReference4(v string) {
	o.Reference4 = &v
}

func (o PrintDocumentRequestReference) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PrintDocumentRequestReference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Reference1) {
		toSerialize["reference1"] = o.Reference1
	}
	if !IsNil(o.Reference2) {
		toSerialize["reference2"] = o.Reference2
	}
	if !IsNil(o.Reference3) {
		toSerialize["reference3"] = o.Reference3
	}
	if !IsNil(o.Reference4) {
		toSerialize["reference4"] = o.Reference4
	}
	return toSerialize, nil
}

type NullablePrintDocumentRequestReference struct {
	value *PrintDocumentRequestReference
	isSet bool
}

func (v NullablePrintDocumentRequestReference) Get() *PrintDocumentRequestReference {
	return v.value
}

func (v *NullablePrintDocumentRequestReference) Set(val *PrintDocumentRequestReference) {
	v.value = val
	v.isSet = true
}

func (v NullablePrintDocumentRequestReference) IsSet() bool {
	return v.isSet
}

func (v *NullablePrintDocumentRequestReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePrintDocumentRequestReference(val *PrintDocumentRequestReference) *NullablePrintDocumentRequestReference {
	return &NullablePrintDocumentRequestReference{value: val, isSet: true}
}

func (v NullablePrintDocumentRequestReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePrintDocumentRequestReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


