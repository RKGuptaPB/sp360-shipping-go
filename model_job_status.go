/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the JobStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobStatus{}

// JobStatus struct for JobStatus
type JobStatus struct {
	// Job Id  can be used to check the status of the print request.
	JobId *string `json:"jobId,omitempty"`
	// Refers to the status of Job.
	Status *string `json:"status,omitempty"`
	PrintStatusTransaction []JobStatusPrintStatusTransactionInner `json:"printStatusTransaction,omitempty"`
}

// NewJobStatus instantiates a new JobStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobStatus() *JobStatus {
	this := JobStatus{}
	return &this
}

// NewJobStatusWithDefaults instantiates a new JobStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobStatusWithDefaults() *JobStatus {
	this := JobStatus{}
	return &this
}

// GetJobId returns the JobId field value if set, zero value otherwise.
func (o *JobStatus) GetJobId() string {
	if o == nil || IsNil(o.JobId) {
		var ret string
		return ret
	}
	return *o.JobId
}

// GetJobIdOk returns a tuple with the JobId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStatus) GetJobIdOk() (*string, bool) {
	if o == nil || IsNil(o.JobId) {
		return nil, false
	}
	return o.JobId, true
}

// HasJobId returns a boolean if a field has been set.
func (o *JobStatus) HasJobId() bool {
	if o != nil && !IsNil(o.JobId) {
		return true
	}

	return false
}

// SetJobId gets a reference to the given string and assigns it to the JobId field.
func (o *JobStatus) SetJobId(v string) {
	o.JobId = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *JobStatus) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStatus) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *JobStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *JobStatus) SetStatus(v string) {
	o.Status = &v
}

// GetPrintStatusTransaction returns the PrintStatusTransaction field value if set, zero value otherwise.
func (o *JobStatus) GetPrintStatusTransaction() []JobStatusPrintStatusTransactionInner {
	if o == nil || IsNil(o.PrintStatusTransaction) {
		var ret []JobStatusPrintStatusTransactionInner
		return ret
	}
	return o.PrintStatusTransaction
}

// GetPrintStatusTransactionOk returns a tuple with the PrintStatusTransaction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *JobStatus) GetPrintStatusTransactionOk() ([]JobStatusPrintStatusTransactionInner, bool) {
	if o == nil || IsNil(o.PrintStatusTransaction) {
		return nil, false
	}
	return o.PrintStatusTransaction, true
}

// HasPrintStatusTransaction returns a boolean if a field has been set.
func (o *JobStatus) HasPrintStatusTransaction() bool {
	if o != nil && !IsNil(o.PrintStatusTransaction) {
		return true
	}

	return false
}

// SetPrintStatusTransaction gets a reference to the given []JobStatusPrintStatusTransactionInner and assigns it to the PrintStatusTransaction field.
func (o *JobStatus) SetPrintStatusTransaction(v []JobStatusPrintStatusTransactionInner) {
	o.PrintStatusTransaction = v
}

func (o JobStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JobId) {
		toSerialize["jobId"] = o.JobId
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.PrintStatusTransaction) {
		toSerialize["printStatusTransaction"] = o.PrintStatusTransaction
	}
	return toSerialize, nil
}

type NullableJobStatus struct {
	value *JobStatus
	isSet bool
}

func (v NullableJobStatus) Get() *JobStatus {
	return v.value
}

func (v *NullableJobStatus) Set(val *JobStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableJobStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableJobStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobStatus(val *JobStatus) *NullableJobStatus {
	return &NullableJobStatus{value: val, isSet: true}
}

func (v NullableJobStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


