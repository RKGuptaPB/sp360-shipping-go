/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the ReturnLabelResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReturnLabelResponse{}

// ReturnLabelResponse struct for ReturnLabelResponse
type ReturnLabelResponse struct {
	FromAddress *ReturnLabelFromAddress `json:"fromAddress,omitempty"`
	Parcel *ReturnLabelParcel `json:"parcel,omitempty"`
	// Key assigned by the shipping system to the transaction.
	CorrelationId *string `json:"correlationId,omitempty"`
	// >-A unique identifier given to the carrier-specific service. This is required for creating a shipment, while it is optional for rating a parcel.
	ServiceId *string `json:"serviceId,omitempty"`
	// >-A unique identifier parcel tracking number
	ParcelTrackingNumber *string `json:"parcelTrackingNumber,omitempty"`
	// >-A unique identifier shipment tracking number
	ShipmentId *string `json:"shipmentId,omitempty"`
	ShipmentOptions *ShipmentOptions `json:"shipmentOptions,omitempty"`
	// labelLayout details
	LabelLayout []ReturnLabelResponseLabelLayoutInner `json:"labelLayout,omitempty"`
	ToAddress *ReturnLabelResponseToAddress `json:"toAddress,omitempty"`
	Rate *ReturnLabelResponseRate `json:"rate,omitempty"`
}

// NewReturnLabelResponse instantiates a new ReturnLabelResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReturnLabelResponse() *ReturnLabelResponse {
	this := ReturnLabelResponse{}
	return &this
}

// NewReturnLabelResponseWithDefaults instantiates a new ReturnLabelResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReturnLabelResponseWithDefaults() *ReturnLabelResponse {
	this := ReturnLabelResponse{}
	return &this
}

// GetFromAddress returns the FromAddress field value if set, zero value otherwise.
func (o *ReturnLabelResponse) GetFromAddress() ReturnLabelFromAddress {
	if o == nil || IsNil(o.FromAddress) {
		var ret ReturnLabelFromAddress
		return ret
	}
	return *o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnLabelResponse) GetFromAddressOk() (*ReturnLabelFromAddress, bool) {
	if o == nil || IsNil(o.FromAddress) {
		return nil, false
	}
	return o.FromAddress, true
}

// HasFromAddress returns a boolean if a field has been set.
func (o *ReturnLabelResponse) HasFromAddress() bool {
	if o != nil && !IsNil(o.FromAddress) {
		return true
	}

	return false
}

// SetFromAddress gets a reference to the given ReturnLabelFromAddress and assigns it to the FromAddress field.
func (o *ReturnLabelResponse) SetFromAddress(v ReturnLabelFromAddress) {
	o.FromAddress = &v
}

// GetParcel returns the Parcel field value if set, zero value otherwise.
func (o *ReturnLabelResponse) GetParcel() ReturnLabelParcel {
	if o == nil || IsNil(o.Parcel) {
		var ret ReturnLabelParcel
		return ret
	}
	return *o.Parcel
}

// GetParcelOk returns a tuple with the Parcel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnLabelResponse) GetParcelOk() (*ReturnLabelParcel, bool) {
	if o == nil || IsNil(o.Parcel) {
		return nil, false
	}
	return o.Parcel, true
}

// HasParcel returns a boolean if a field has been set.
func (o *ReturnLabelResponse) HasParcel() bool {
	if o != nil && !IsNil(o.Parcel) {
		return true
	}

	return false
}

// SetParcel gets a reference to the given ReturnLabelParcel and assigns it to the Parcel field.
func (o *ReturnLabelResponse) SetParcel(v ReturnLabelParcel) {
	o.Parcel = &v
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *ReturnLabelResponse) GetCorrelationId() string {
	if o == nil || IsNil(o.CorrelationId) {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnLabelResponse) GetCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelationId) {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *ReturnLabelResponse) HasCorrelationId() bool {
	if o != nil && !IsNil(o.CorrelationId) {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *ReturnLabelResponse) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *ReturnLabelResponse) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnLabelResponse) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *ReturnLabelResponse) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *ReturnLabelResponse) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetParcelTrackingNumber returns the ParcelTrackingNumber field value if set, zero value otherwise.
func (o *ReturnLabelResponse) GetParcelTrackingNumber() string {
	if o == nil || IsNil(o.ParcelTrackingNumber) {
		var ret string
		return ret
	}
	return *o.ParcelTrackingNumber
}

// GetParcelTrackingNumberOk returns a tuple with the ParcelTrackingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnLabelResponse) GetParcelTrackingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelTrackingNumber) {
		return nil, false
	}
	return o.ParcelTrackingNumber, true
}

// HasParcelTrackingNumber returns a boolean if a field has been set.
func (o *ReturnLabelResponse) HasParcelTrackingNumber() bool {
	if o != nil && !IsNil(o.ParcelTrackingNumber) {
		return true
	}

	return false
}

// SetParcelTrackingNumber gets a reference to the given string and assigns it to the ParcelTrackingNumber field.
func (o *ReturnLabelResponse) SetParcelTrackingNumber(v string) {
	o.ParcelTrackingNumber = &v
}

// GetShipmentId returns the ShipmentId field value if set, zero value otherwise.
func (o *ReturnLabelResponse) GetShipmentId() string {
	if o == nil || IsNil(o.ShipmentId) {
		var ret string
		return ret
	}
	return *o.ShipmentId
}

// GetShipmentIdOk returns a tuple with the ShipmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnLabelResponse) GetShipmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentId) {
		return nil, false
	}
	return o.ShipmentId, true
}

// HasShipmentId returns a boolean if a field has been set.
func (o *ReturnLabelResponse) HasShipmentId() bool {
	if o != nil && !IsNil(o.ShipmentId) {
		return true
	}

	return false
}

// SetShipmentId gets a reference to the given string and assigns it to the ShipmentId field.
func (o *ReturnLabelResponse) SetShipmentId(v string) {
	o.ShipmentId = &v
}

// GetShipmentOptions returns the ShipmentOptions field value if set, zero value otherwise.
func (o *ReturnLabelResponse) GetShipmentOptions() ShipmentOptions {
	if o == nil || IsNil(o.ShipmentOptions) {
		var ret ShipmentOptions
		return ret
	}
	return *o.ShipmentOptions
}

// GetShipmentOptionsOk returns a tuple with the ShipmentOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnLabelResponse) GetShipmentOptionsOk() (*ShipmentOptions, bool) {
	if o == nil || IsNil(o.ShipmentOptions) {
		return nil, false
	}
	return o.ShipmentOptions, true
}

// HasShipmentOptions returns a boolean if a field has been set.
func (o *ReturnLabelResponse) HasShipmentOptions() bool {
	if o != nil && !IsNil(o.ShipmentOptions) {
		return true
	}

	return false
}

// SetShipmentOptions gets a reference to the given ShipmentOptions and assigns it to the ShipmentOptions field.
func (o *ReturnLabelResponse) SetShipmentOptions(v ShipmentOptions) {
	o.ShipmentOptions = &v
}

// GetLabelLayout returns the LabelLayout field value if set, zero value otherwise.
func (o *ReturnLabelResponse) GetLabelLayout() []ReturnLabelResponseLabelLayoutInner {
	if o == nil || IsNil(o.LabelLayout) {
		var ret []ReturnLabelResponseLabelLayoutInner
		return ret
	}
	return o.LabelLayout
}

// GetLabelLayoutOk returns a tuple with the LabelLayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnLabelResponse) GetLabelLayoutOk() ([]ReturnLabelResponseLabelLayoutInner, bool) {
	if o == nil || IsNil(o.LabelLayout) {
		return nil, false
	}
	return o.LabelLayout, true
}

// HasLabelLayout returns a boolean if a field has been set.
func (o *ReturnLabelResponse) HasLabelLayout() bool {
	if o != nil && !IsNil(o.LabelLayout) {
		return true
	}

	return false
}

// SetLabelLayout gets a reference to the given []ReturnLabelResponseLabelLayoutInner and assigns it to the LabelLayout field.
func (o *ReturnLabelResponse) SetLabelLayout(v []ReturnLabelResponseLabelLayoutInner) {
	o.LabelLayout = v
}

// GetToAddress returns the ToAddress field value if set, zero value otherwise.
func (o *ReturnLabelResponse) GetToAddress() ReturnLabelResponseToAddress {
	if o == nil || IsNil(o.ToAddress) {
		var ret ReturnLabelResponseToAddress
		return ret
	}
	return *o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnLabelResponse) GetToAddressOk() (*ReturnLabelResponseToAddress, bool) {
	if o == nil || IsNil(o.ToAddress) {
		return nil, false
	}
	return o.ToAddress, true
}

// HasToAddress returns a boolean if a field has been set.
func (o *ReturnLabelResponse) HasToAddress() bool {
	if o != nil && !IsNil(o.ToAddress) {
		return true
	}

	return false
}

// SetToAddress gets a reference to the given ReturnLabelResponseToAddress and assigns it to the ToAddress field.
func (o *ReturnLabelResponse) SetToAddress(v ReturnLabelResponseToAddress) {
	o.ToAddress = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *ReturnLabelResponse) GetRate() ReturnLabelResponseRate {
	if o == nil || IsNil(o.Rate) {
		var ret ReturnLabelResponseRate
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReturnLabelResponse) GetRateOk() (*ReturnLabelResponseRate, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *ReturnLabelResponse) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given ReturnLabelResponseRate and assigns it to the Rate field.
func (o *ReturnLabelResponse) SetRate(v ReturnLabelResponseRate) {
	o.Rate = &v
}

func (o ReturnLabelResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReturnLabelResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FromAddress) {
		toSerialize["fromAddress"] = o.FromAddress
	}
	if !IsNil(o.Parcel) {
		toSerialize["parcel"] = o.Parcel
	}
	if !IsNil(o.CorrelationId) {
		toSerialize["correlationId"] = o.CorrelationId
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.ParcelTrackingNumber) {
		toSerialize["parcelTrackingNumber"] = o.ParcelTrackingNumber
	}
	if !IsNil(o.ShipmentId) {
		toSerialize["shipmentId"] = o.ShipmentId
	}
	if !IsNil(o.ShipmentOptions) {
		toSerialize["shipmentOptions"] = o.ShipmentOptions
	}
	if !IsNil(o.LabelLayout) {
		toSerialize["labelLayout"] = o.LabelLayout
	}
	if !IsNil(o.ToAddress) {
		toSerialize["toAddress"] = o.ToAddress
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	return toSerialize, nil
}

type NullableReturnLabelResponse struct {
	value *ReturnLabelResponse
	isSet bool
}

func (v NullableReturnLabelResponse) Get() *ReturnLabelResponse {
	return v.value
}

func (v *NullableReturnLabelResponse) Set(val *ReturnLabelResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReturnLabelResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReturnLabelResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReturnLabelResponse(val *ReturnLabelResponse) *NullableReturnLabelResponse {
	return &NullableReturnLabelResponse{value: val, isSet: true}
}

func (v NullableReturnLabelResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReturnLabelResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


