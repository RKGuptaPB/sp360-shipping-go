/*
Shipping APIs

The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sp360shipping

import (
	"encoding/json"
)

// checks if the ReprintShipmentV2LabelLayoutInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReprintShipmentV2LabelLayoutInner{}

// ReprintShipmentV2LabelLayoutInner struct for ReprintShipmentV2LabelLayoutInner
type ReprintShipmentV2LabelLayoutInner struct {
	// This is used to encode binary data as printable text.<br /> Content Type of the document e.g. DOCUMENT_REFERENCE. [IN/OUT]
	ContentType *string `json:"contentType,omitempty"`
	// Content/Identifier of document e.g. DOCUMENT_REFERECE_ID.<br /> Actual document name e.g. abc.pdf. [IN].
	Contents *string `json:"contents,omitempty"`
	// Defines the format of the document file the print takes.
	FileFormat *string `json:"fileFormat,omitempty"`
	// Defines the label size of the Shipment, that is, the Shipping Label is available in different Doc Size.
	Size *string `json:"size,omitempty"`
	// Defines the type of the Shipment.
	Type *string `json:"type,omitempty"`
}

// NewReprintShipmentV2LabelLayoutInner instantiates a new ReprintShipmentV2LabelLayoutInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReprintShipmentV2LabelLayoutInner() *ReprintShipmentV2LabelLayoutInner {
	this := ReprintShipmentV2LabelLayoutInner{}
	return &this
}

// NewReprintShipmentV2LabelLayoutInnerWithDefaults instantiates a new ReprintShipmentV2LabelLayoutInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReprintShipmentV2LabelLayoutInnerWithDefaults() *ReprintShipmentV2LabelLayoutInner {
	this := ReprintShipmentV2LabelLayoutInner{}
	return &this
}

// GetContentType returns the ContentType field value if set, zero value otherwise.
func (o *ReprintShipmentV2LabelLayoutInner) GetContentType() string {
	if o == nil || IsNil(o.ContentType) {
		var ret string
		return ret
	}
	return *o.ContentType
}

// GetContentTypeOk returns a tuple with the ContentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReprintShipmentV2LabelLayoutInner) GetContentTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ContentType) {
		return nil, false
	}
	return o.ContentType, true
}

// HasContentType returns a boolean if a field has been set.
func (o *ReprintShipmentV2LabelLayoutInner) HasContentType() bool {
	if o != nil && !IsNil(o.ContentType) {
		return true
	}

	return false
}

// SetContentType gets a reference to the given string and assigns it to the ContentType field.
func (o *ReprintShipmentV2LabelLayoutInner) SetContentType(v string) {
	o.ContentType = &v
}

// GetContents returns the Contents field value if set, zero value otherwise.
func (o *ReprintShipmentV2LabelLayoutInner) GetContents() string {
	if o == nil || IsNil(o.Contents) {
		var ret string
		return ret
	}
	return *o.Contents
}

// GetContentsOk returns a tuple with the Contents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReprintShipmentV2LabelLayoutInner) GetContentsOk() (*string, bool) {
	if o == nil || IsNil(o.Contents) {
		return nil, false
	}
	return o.Contents, true
}

// HasContents returns a boolean if a field has been set.
func (o *ReprintShipmentV2LabelLayoutInner) HasContents() bool {
	if o != nil && !IsNil(o.Contents) {
		return true
	}

	return false
}

// SetContents gets a reference to the given string and assigns it to the Contents field.
func (o *ReprintShipmentV2LabelLayoutInner) SetContents(v string) {
	o.Contents = &v
}

// GetFileFormat returns the FileFormat field value if set, zero value otherwise.
func (o *ReprintShipmentV2LabelLayoutInner) GetFileFormat() string {
	if o == nil || IsNil(o.FileFormat) {
		var ret string
		return ret
	}
	return *o.FileFormat
}

// GetFileFormatOk returns a tuple with the FileFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReprintShipmentV2LabelLayoutInner) GetFileFormatOk() (*string, bool) {
	if o == nil || IsNil(o.FileFormat) {
		return nil, false
	}
	return o.FileFormat, true
}

// HasFileFormat returns a boolean if a field has been set.
func (o *ReprintShipmentV2LabelLayoutInner) HasFileFormat() bool {
	if o != nil && !IsNil(o.FileFormat) {
		return true
	}

	return false
}

// SetFileFormat gets a reference to the given string and assigns it to the FileFormat field.
func (o *ReprintShipmentV2LabelLayoutInner) SetFileFormat(v string) {
	o.FileFormat = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *ReprintShipmentV2LabelLayoutInner) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReprintShipmentV2LabelLayoutInner) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *ReprintShipmentV2LabelLayoutInner) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *ReprintShipmentV2LabelLayoutInner) SetSize(v string) {
	o.Size = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ReprintShipmentV2LabelLayoutInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReprintShipmentV2LabelLayoutInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ReprintShipmentV2LabelLayoutInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ReprintShipmentV2LabelLayoutInner) SetType(v string) {
	o.Type = &v
}

func (o ReprintShipmentV2LabelLayoutInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReprintShipmentV2LabelLayoutInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContentType) {
		toSerialize["contentType"] = o.ContentType
	}
	if !IsNil(o.Contents) {
		toSerialize["contents"] = o.Contents
	}
	if !IsNil(o.FileFormat) {
		toSerialize["fileFormat"] = o.FileFormat
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableReprintShipmentV2LabelLayoutInner struct {
	value *ReprintShipmentV2LabelLayoutInner
	isSet bool
}

func (v NullableReprintShipmentV2LabelLayoutInner) Get() *ReprintShipmentV2LabelLayoutInner {
	return v.value
}

func (v *NullableReprintShipmentV2LabelLayoutInner) Set(val *ReprintShipmentV2LabelLayoutInner) {
	v.value = val
	v.isSet = true
}

func (v NullableReprintShipmentV2LabelLayoutInner) IsSet() bool {
	return v.isSet
}

func (v *NullableReprintShipmentV2LabelLayoutInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReprintShipmentV2LabelLayoutInner(val *ReprintShipmentV2LabelLayoutInner) *NullableReprintShipmentV2LabelLayoutInner {
	return &NullableReprintShipmentV2LabelLayoutInner{value: val, isSet: true}
}

func (v NullableReprintShipmentV2LabelLayoutInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReprintShipmentV2LabelLayoutInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


